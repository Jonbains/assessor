{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Documents/GitHub/assessor/src/core/components/visualizations/RiskEvolutionTimeline.jsx\";\nimport React from 'react';\nimport styles from './Visualizations.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RiskEvolutionTimeline = ({\n  risks = []\n}) => {\n  // Sort risks by timeframe\n  const sortedRisks = [...risks].sort((a, b) => a.month - b.month);\n\n  // Calculate chart dimensions\n  const chartWidth = Math.max(600, sortedRisks.length * 120);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.timelineContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Risk Evolution Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${chartWidth} 200`,\n      className: styles.timelineSvg,\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"50\",\n        y1: \"100\",\n        x2: chartWidth - 50,\n        y2: \"100\",\n        className: styles.timelineLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), [0, 3, 6, 9, 12, 18, 24].map((month, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: 50 + month / 24 * (chartWidth - 100),\n          y1: \"95\",\n          x2: 50 + month / 24 * (chartWidth - 100),\n          y2: \"105\",\n          stroke: \"rgba(255,255,255,0.3)\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: 50 + month / 24 * (chartWidth - 100),\n          y: \"120\",\n          className: styles.timelineLabel,\n          textAnchor: \"middle\",\n          children: month === 0 ? 'Now' : `M${month}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)), sortedRisks.map((risk, i) => {\n        const x = 50 + risk.month / 24 * (chartWidth - 100);\n        const y = risk.type === 'opportunity' ? 70 : 130;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: x,\n            cy: y,\n            r: \"8\",\n            className: `${styles.timelinePoint} ${risk.type === 'risk' ? styles.risk : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: x,\n            y1: \"100\",\n            x2: x,\n            y2: y,\n            stroke: risk.type === 'risk' ? '#ff6666' : '#66ff66',\n            strokeWidth: \"2\",\n            strokeDasharray: \"3,2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: risk.type === 'opportunity' ? 50 : 150,\n            className: styles.timelineLabel,\n            textAnchor: \"middle\",\n            children: risk.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = RiskEvolutionTimeline;\nvar _c;\n$RefreshReg$(_c, \"RiskEvolutionTimeline\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","RiskEvolutionTimeline","risks","sortedRisks","sort","a","b","month","chartWidth","Math","max","length","className","timelineContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","timelineSvg","x1","y1","x2","y2","timelineLine","map","i","stroke","strokeWidth","x","y","timelineLabel","textAnchor","risk","type","cx","cy","r","timelinePoint","strokeDasharray","name","_c","$RefreshReg$"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/components/visualizations/RiskEvolutionTimeline.jsx"],"sourcesContent":["import React from 'react';\nimport styles from './Visualizations.module.css';\n\nexport const RiskEvolutionTimeline = ({ risks = [] }) => {\n  // Sort risks by timeframe\n  const sortedRisks = [...risks].sort((a, b) => a.month - b.month);\n  \n  // Calculate chart dimensions\n  const chartWidth = Math.max(600, sortedRisks.length * 120);\n  \n  return (\n    <div className={styles.timelineContainer}>\n      <h3>Risk Evolution Timeline</h3>\n      \n      <svg viewBox={`0 0 ${chartWidth} 200`} className={styles.timelineSvg}>\n        {/* Timeline base line */}\n        <line\n          x1=\"50\"\n          y1=\"100\"\n          x2={chartWidth - 50}\n          y2=\"100\"\n          className={styles.timelineLine}\n        />\n        \n        {/* Month markers */}\n        {[0, 3, 6, 9, 12, 18, 24].map((month, i) => (\n          <g key={i}>\n            <line\n              x1={50 + (month / 24) * (chartWidth - 100)}\n              y1=\"95\"\n              x2={50 + (month / 24) * (chartWidth - 100)}\n              y2=\"105\"\n              stroke=\"rgba(255,255,255,0.3)\"\n              strokeWidth=\"1\"\n            />\n            <text\n              x={50 + (month / 24) * (chartWidth - 100)}\n              y=\"120\"\n              className={styles.timelineLabel}\n              textAnchor=\"middle\"\n            >\n              {month === 0 ? 'Now' : `M${month}`}\n            </text>\n          </g>\n        ))}\n        \n        {/* Risk points */}\n        {sortedRisks.map((risk, i) => {\n          const x = 50 + (risk.month / 24) * (chartWidth - 100);\n          const y = risk.type === 'opportunity' ? 70 : 130;\n          \n          return (\n            <g key={i}>\n              <circle\n                cx={x}\n                cy={y}\n                r=\"8\"\n                className={`${styles.timelinePoint} ${risk.type === 'risk' ? styles.risk : ''}`}\n              />\n              <line\n                x1={x}\n                y1=\"100\"\n                x2={x}\n                y2={y}\n                stroke={risk.type === 'risk' ? '#ff6666' : '#66ff66'}\n                strokeWidth=\"2\"\n                strokeDasharray=\"3,2\"\n              />\n              <text\n                x={x}\n                y={risk.type === 'opportunity' ? 50 : 150}\n                className={styles.timelineLabel}\n                textAnchor=\"middle\"\n              >\n                {risk.name}\n              </text>\n            </g>\n          );\n        })}\n      </svg>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}