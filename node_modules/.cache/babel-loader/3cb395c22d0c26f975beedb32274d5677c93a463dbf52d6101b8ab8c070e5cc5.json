{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Documents/GitHub/assessor/src/core/components/ServiceSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useAssessment } from '../hooks/useAssessment';\nimport { ProgressBar } from './ProgressBar';\nimport styles from '../styles/components.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceSelector = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    type\n  } = useParams();\n  const {\n    assessmentData,\n    updateAssessmentData,\n    saveProgress\n  } = useAssessment();\n  const [services, setServices] = useState([]);\n  const [selectedServices, setSelectedServices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Debug the component mounting\n  console.log('ServiceSelector rendered, assessment type:', type);\n  console.log('Current assessment data:', assessmentData);\n  useEffect(() => {\n    const loadServices = async () => {\n      try {\n        setLoading(true);\n        console.log(`Loading services for ${type}`);\n\n        // Use dynamic import instead of fetch\n        const module = await import(`../../assessments/${type}/${type === 'agency-vulnerability' ? 'services' : 'activities'}.json`);\n        const data = module.default || module;\n        const servicesList = data.services || data.activities || [];\n        console.log('Services loaded:', servicesList);\n        setServices(servicesList);\n\n        // If we have previously selected services, restore them\n        if (assessmentData && assessmentData.services && assessmentData.services.length > 0) {\n          const savedSelections = {};\n          assessmentData.services.forEach(id => {\n            savedSelections[id] = type === 'agency-vulnerability' ? 100 : 1; // Default to 100% for agency or 1 for inhouse\n          });\n          setSelectedServices(savedSelections);\n          console.log('Restored previous selections:', savedSelections);\n        }\n      } catch (error) {\n        console.error('Failed to load services:', error);\n        setError(`Failed to load services: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadServices();\n  }, [type, assessmentData === null || assessmentData === void 0 ? void 0 : assessmentData.services]);\n  const handleSliderChange = (serviceId, value) => {\n    setSelectedServices(prev => ({\n      ...prev,\n      [serviceId]: parseInt(value)\n    }));\n  };\n  const handleContinue = async () => {\n    const selected = Object.entries(selectedServices).filter(([_, value]) => value > 0).map(([key]) => key);\n    if (selected.length > 0) {\n      try {\n        console.log('Saving selected services:', selected);\n\n        // First update assessment data\n        await updateAssessmentData({\n          services: selected\n        });\n        console.log('Assessment data updated with services');\n\n        // Then save progress\n        await saveProgress('services');\n        console.log('Progress saved for services');\n\n        // Finally navigate\n        const nextPath = `/assessment/${type}/questions`;\n        console.log(`Navigating to ${nextPath}`);\n\n        // Use direct navigation as a fallback if React Router navigation doesn't work\n        navigate(nextPath, {\n          replace: true\n        });\n\n        // Set a safety timeout to ensure navigation happens\n        setTimeout(() => {\n          console.log('Safety timeout: checking if navigation occurred');\n          if (window.location.pathname !== nextPath) {\n            console.log('Forcing navigation with window.location');\n            window.location.href = nextPath;\n          }\n        }, 500); // Give React Router 500ms to navigate\n      } catch (error) {\n        console.error('Error saving services:', error);\n        alert('There was an error saving your selections. Please try again.');\n      }\n    } else {\n      alert('Please select at least one service to continue.');\n    }\n  };\n  const hasSelections = Object.values(selectedServices).some(v => v > 0);\n  const isAgency = type === 'agency-vulnerability';\n  const title = isAgency ? \"What services do you provide?\" : \"Which marketing activities do you do?\";\n  const description = isAgency ? \"Drag the sliders to show relative importance. Don't worry about exact percentages—we'll figure that out.\" : \"Select all that apply - we'll ask about each one.\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.screen,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logo,\n        children: [\"obsolete\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: 45,\n        label: \"Step 4 of 7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#aaa',\n        fontStyle: 'italic'\n      },\n      children: \"Loading services...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.servicesGrid,\n      children: services.map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.serviceItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.serviceRow,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.serviceIcon,\n            children: service.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.serviceContent,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.serviceName,\n              children: service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.serviceDescription,\n              children: service.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this), isAgency ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sliderContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: selectedServices[service.id] || 0,\n            onChange: e => handleSliderChange(service.id, e.target.value),\n            className: styles.rangeSlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.sliderValue,\n            children: [selectedServices[service.id] || 0, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.checkboxContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: service.id,\n            checked: !!selectedServices[service.id],\n            onChange: e => handleSliderChange(service.id, e.target.checked ? 1 : 0),\n            className: styles.checkbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: service.id,\n            className: styles.checkboxLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }, this)]\n      }, service.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coCreationHighlight,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Why we ask: Knowing your core \", isAgency ? 'services' : 'activities', \" helps us pinpoint where AI can have the biggest impact on your efficiency and \", isAgency ? 'client value' : 'results', \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.navButton,\n        onClick: () => window.location.reload(),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navigation,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.navButton,\n        onClick: () => navigate(`/assessment/${type}/qualify`, {\n          replace: true\n        }),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.navButton} ${styles.primary}`,\n        disabled: !hasSelections,\n        onClick: handleContinue,\n        children: !hasSelections ? 'Please select a service' : 'Continue'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(ServiceSelector, \"rvOLoavrChPkva9JqhK7L9QEyQY=\", false, function () {\n  return [useNavigate, useParams, useAssessment];\n});\n_c = ServiceSelector;\nexport default ServiceSelector;\nvar _c;\n$RefreshReg$(_c, \"ServiceSelector\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useAssessment","ProgressBar","styles","jsxDEV","_jsxDEV","ServiceSelector","_s","navigate","type","assessmentData","updateAssessmentData","saveProgress","services","setServices","selectedServices","setSelectedServices","loading","setLoading","error","setError","console","log","loadServices","module","data","default","servicesList","activities","length","savedSelections","forEach","id","message","handleSliderChange","serviceId","value","prev","parseInt","handleContinue","selected","Object","entries","filter","_","map","key","nextPath","replace","setTimeout","window","location","pathname","href","alert","hasSelections","values","some","v","isAgency","title","description","className","screen","children","header","logo","fileName","_jsxFileName","lineNumber","columnNumber","progress","label","style","color","fontStyle","servicesGrid","service","serviceItem","serviceRow","serviceIcon","icon","serviceContent","serviceName","name","serviceDescription","sliderContainer","min","max","onChange","e","target","rangeSlider","sliderValue","checkboxContainer","checked","checkbox","htmlFor","checkboxLabel","coCreationHighlight","errorContainer","navButton","onClick","reload","navigation","primary","disabled","_c","$RefreshReg$"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/components/ServiceSelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useAssessment } from '../hooks/useAssessment';\nimport { ProgressBar } from './ProgressBar';\nimport styles from '../styles/components.module.css';\n\nconst ServiceSelector = () => {\n    const navigate = useNavigate();\n    const { type } = useParams();\n    const { assessmentData, updateAssessmentData, saveProgress } = useAssessment();\n    \n    const [services, setServices] = useState([]);\n    const [selectedServices, setSelectedServices] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Debug the component mounting\n    console.log('ServiceSelector rendered, assessment type:', type);\n    console.log('Current assessment data:', assessmentData);\n\n    useEffect(() => {\n        const loadServices = async () => {\n            try {\n                setLoading(true);\n                console.log(`Loading services for ${type}`);\n                \n                // Use dynamic import instead of fetch\n                const module = await import(`../../assessments/${type}/${type === 'agency-vulnerability' ? 'services' : 'activities'}.json`);\n                const data = module.default || module;\n                const servicesList = data.services || data.activities || [];\n                \n                console.log('Services loaded:', servicesList);\n                setServices(servicesList);\n                \n                // If we have previously selected services, restore them\n                if (assessmentData && assessmentData.services && assessmentData.services.length > 0) {\n                    const savedSelections = {};\n                    assessmentData.services.forEach(id => {\n                        savedSelections[id] = type === 'agency-vulnerability' ? 100 : 1; // Default to 100% for agency or 1 for inhouse\n                    });\n                    setSelectedServices(savedSelections);\n                    console.log('Restored previous selections:', savedSelections);\n                }\n            } catch (error) {\n                console.error('Failed to load services:', error);\n                setError(`Failed to load services: ${error.message}`);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadServices();\n    }, [type, assessmentData?.services]);\n\n    const handleSliderChange = (serviceId, value) => {\n        setSelectedServices(prev => ({\n            ...prev,\n            [serviceId]: parseInt(value)\n        }));\n    };\n\n    const handleContinue = async () => {\n        const selected = Object.entries(selectedServices)\n            .filter(([_, value]) => value > 0)\n            .map(([key]) => key);\n        \n        if (selected.length > 0) {\n            try {\n                console.log('Saving selected services:', selected);\n                \n                // First update assessment data\n                await updateAssessmentData({ services: selected });\n                console.log('Assessment data updated with services');\n                \n                // Then save progress\n                await saveProgress('services');\n                console.log('Progress saved for services');\n                \n                // Finally navigate\n                const nextPath = `/assessment/${type}/questions`;\n                console.log(`Navigating to ${nextPath}`);\n                \n                // Use direct navigation as a fallback if React Router navigation doesn't work\n                navigate(nextPath, { replace: true });\n                \n                // Set a safety timeout to ensure navigation happens\n                setTimeout(() => {\n                    console.log('Safety timeout: checking if navigation occurred');\n                    if (window.location.pathname !== nextPath) {\n                        console.log('Forcing navigation with window.location');\n                        window.location.href = nextPath;\n                    }\n                }, 500); // Give React Router 500ms to navigate\n            } catch (error) {\n                console.error('Error saving services:', error);\n                alert('There was an error saving your selections. Please try again.');\n            }\n        } else {\n            alert('Please select at least one service to continue.');\n        }\n    };\n\n    const hasSelections = Object.values(selectedServices).some(v => v > 0);\n    const isAgency = type === 'agency-vulnerability';\n    \n    const title = isAgency ? \n        \"What services do you provide?\" : \n        \"Which marketing activities do you do?\";\n    \n    const description = isAgency ?\n        \"Drag the sliders to show relative importance. Don't worry about exact percentages—we'll figure that out.\" :\n        \"Select all that apply - we'll ask about each one.\";\n\n    return (\n        <div className={styles.screen}>\n            <div className={styles.header}>\n                <div className={styles.logo}>obsolete<span>.</span></div>\n                <ProgressBar progress={45} label=\"Step 4 of 7\" />\n            </div>\n            \n            <h2>{title}</h2>\n            <p>{description}</p>\n            \n            {loading ? (\n                <p style={{ color: '#aaa', fontStyle: 'italic' }}>Loading services...</p>\n            ) : (\n                <div className={styles.servicesGrid}>\n                    {services.map((service) => (\n                        <div key={service.id} className={styles.serviceItem}>\n                            <div className={styles.serviceRow}>\n                                <div className={styles.serviceIcon}>{service.icon}</div>\n                                <div className={styles.serviceContent}>\n                                    <div className={styles.serviceName}>{service.name}</div>\n                                    <div className={styles.serviceDescription}>{service.description}</div>\n                                </div>\n                            </div>\n                            {isAgency ? (\n                                <div className={styles.sliderContainer}>\n                                    <input\n                                        type=\"range\"\n                                        min=\"0\"\n                                        max=\"100\"\n                                        value={selectedServices[service.id] || 0}\n                                        onChange={(e) => handleSliderChange(service.id, e.target.value)}\n                                        className={styles.rangeSlider}\n                                    />\n                                    <span className={styles.sliderValue}>\n                                        {selectedServices[service.id] || 0}%\n                                    </span>\n                                </div>\n                            ) : (\n                                <div className={styles.checkboxContainer}>\n                                    <input\n                                        type=\"checkbox\"\n                                        id={service.id}\n                                        checked={!!selectedServices[service.id]}\n                                        onChange={(e) => handleSliderChange(service.id, e.target.checked ? 1 : 0)}\n                                        className={styles.checkbox}\n                                    />\n                                    <label htmlFor={service.id} className={styles.checkboxLabel}></label>\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            )}\n            \n            <div className={styles.coCreationHighlight}>\n                <p>Why we ask: Knowing your core {isAgency ? 'services' : 'activities'} helps us pinpoint where AI can have the biggest impact on your efficiency and {isAgency ? 'client value' : 'results'}.</p>\n            </div>\n            \n            {error && (\n                <div className={styles.errorContainer}>\n                    <p>{error}</p>\n                    <button \n                        className={styles.navButton} \n                        onClick={() => window.location.reload()}\n                    >\n                        Try Again\n                    </button>\n                </div>\n            )}\n            \n            <div className={styles.navigation}>\n                <button className={styles.navButton} onClick={() => navigate(`/assessment/${type}/qualify`, { replace: true })}>← Back</button>\n                <button \n                    className={`${styles.navButton} ${styles.primary}`}\n                    disabled={!hasSelections}\n                    onClick={handleContinue}\n                >\n                    {!hasSelections ? 'Please select a service' : 'Continue'}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ServiceSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}