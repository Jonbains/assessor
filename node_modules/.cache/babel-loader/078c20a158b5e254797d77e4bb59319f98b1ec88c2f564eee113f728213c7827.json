{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Documents/GitHub/assessor/src/core/components/SectorSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ProgressBar } from './ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SectorSelector = ({\n  assessmentType,\n  onSelect,\n  onBack\n}) => {\n  _s();\n  const [sectors, setSectors] = useState([]);\n  const [selectedSector, setSelectedSector] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadSectors = async () => {\n      try {\n        // Use dynamic import instead of fetch\n        const module = await import(`../../assessments/${assessmentType}/sectors.json`);\n        const data = module.default || module;\n        setSectors(data.sectors || []);\n      } catch (error) {\n        console.error('Failed to load sectors:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadSectors();\n  }, [assessmentType]);\n  const handleSelect = sector => {\n    setSelectedSector(sector);\n  };\n  const handleContinue = () => {\n    if (selectedSector) {\n      onSelect(selectedSector);\n    }\n  };\n  const title = assessmentType === 'agency-vulnerability' ? \"What type of agency are you?\" : \"What industry is your company in?\";\n  const description = assessmentType === 'agency-vulnerability' ? \"We'll tailor your assessment to the unique challenges of your sector.\" : \"This helps us provide relevant benchmarks and recommendations.\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen active\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [\"obsolete\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: 15,\n        label: \"Step 2 of 7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#aaa',\n        fontStyle: 'italic'\n      },\n      children: \"Loading sectors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: sectors.map(sector => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `option ${(selectedSector === null || selectedSector === void 0 ? void 0 : selectedSector.id) === sector.id ? 'selected' : ''}`,\n        onClick: () => handleSelect(sector),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-icon\",\n          children: sector.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-title\",\n            children: sector.name || sector.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), sector.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-description\",\n            children: sector.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)]\n      }, sector.id || sector.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: onBack,\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: !selectedSector,\n        onClick: handleContinue,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(SectorSelector, \"ymxzYCD17TPv0AQLJDyPrU1p0OA=\");\n_c = SectorSelector;\nexport default SectorSelector;\nvar _c;\n$RefreshReg$(_c, \"SectorSelector\");","map":{"version":3,"names":["React","useState","useEffect","ProgressBar","jsxDEV","_jsxDEV","SectorSelector","assessmentType","onSelect","onBack","_s","sectors","setSectors","selectedSector","setSelectedSector","loading","setLoading","loadSectors","module","data","default","error","console","handleSelect","sector","handleContinue","title","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","progress","label","style","color","fontStyle","map","id","onClick","icon","name","value","disabled","_c","$RefreshReg$"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/components/SectorSelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ProgressBar } from './ProgressBar';\n\nconst SectorSelector = ({ assessmentType, onSelect, onBack }) => {\n    const [sectors, setSectors] = useState([]);\n    const [selectedSector, setSelectedSector] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const loadSectors = async () => {\n            try {\n                // Use dynamic import instead of fetch\n                const module = await import(`../../assessments/${assessmentType}/sectors.json`);\n                const data = module.default || module;\n                setSectors(data.sectors || []);\n            } catch (error) {\n                console.error('Failed to load sectors:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadSectors();\n    }, [assessmentType]);\n\n    const handleSelect = (sector) => {\n        setSelectedSector(sector);\n    };\n\n    const handleContinue = () => {\n        if (selectedSector) {\n            onSelect(selectedSector);\n        }\n    };\n\n    const title = assessmentType === 'agency-vulnerability' ? \n        \"What type of agency are you?\" : \n        \"What industry is your company in?\";\n    \n    const description = assessmentType === 'agency-vulnerability' ?\n        \"We'll tailor your assessment to the unique challenges of your sector.\" :\n        \"This helps us provide relevant benchmarks and recommendations.\";\n\n    return (\n        <div className=\"screen active\">\n            <div className=\"header\">\n                <div className=\"logo\">obsolete<span>.</span></div>\n                <ProgressBar progress={15} label=\"Step 2 of 7\" />\n            </div>\n            \n            <h2>{title}</h2>\n            <p>{description}</p>\n            \n            {loading ? (\n                <p style={{ color: '#aaa', fontStyle: 'italic' }}>Loading sectors...</p>\n            ) : (\n                <div className=\"options\">\n                    {sectors.map((sector) => (\n                        <div \n                            key={sector.id || sector.value}\n                            className={`option ${selectedSector?.id === sector.id ? 'selected' : ''}`}\n                            onClick={() => handleSelect(sector)}\n                        >\n                            <div className=\"option-icon\">{sector.icon}</div>\n                            <div className=\"option-content\">\n                                <div className=\"option-title\">{sector.name || sector.label}</div>\n                                {sector.description && (\n                                    <div className=\"option-description\">{sector.description}</div>\n                                )}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            )}\n            \n            <div className=\"navigation\">\n                <button className=\"btn btn-secondary\" onClick={onBack}>‚Üê Back</button>\n                <button \n                    className=\"btn btn-primary\" \n                    disabled={!selectedSector}\n                    onClick={handleContinue}\n                >\n                    Continue\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default SectorSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}