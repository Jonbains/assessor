{"ast":null,"code":"export class DataManager {\n  constructor() {\n    this.responses = {};\n    this.context = {};\n    this.metadata = {\n      startTime: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n  }\n  saveResponse(questionId, value) {\n    this.responses[questionId] = value;\n    this.metadata.lastUpdated = new Date().toISOString();\n  }\n  getResponse(questionId) {\n    return this.responses[questionId];\n  }\n  getResponses() {\n    return {\n      ...this.responses\n    };\n  }\n  setResponses(responses) {\n    this.responses = {\n      ...responses\n    };\n  }\n  setContext(key, value) {\n    this.context[key] = value;\n  }\n  getContext(key) {\n    if (key) {\n      return this.context[key];\n    }\n    return {\n      ...this.context\n    };\n  }\n  addToContext(updates) {\n    this.context = {\n      ...this.context,\n      ...updates\n    };\n  }\n  getMetadata() {\n    return {\n      ...this.metadata\n    };\n  }\n  calculateCompletionTime() {\n    const start = new Date(this.metadata.startTime);\n    const end = new Date();\n    const diffMs = end - start;\n    const diffMins = Math.round(diffMs / 60000);\n    return diffMins;\n  }\n  reset() {\n    this.responses = {};\n    this.context = {};\n    this.metadata = {\n      startTime: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n  }\n  export() {\n    return {\n      responses: this.getResponses(),\n      context: this.getContext(),\n      metadata: this.getMetadata()\n    };\n  }\n  import(data) {\n    if (data.responses) this.responses = data.responses;\n    if (data.context) this.context = data.context;\n    if (data.metadata) this.metadata = data.metadata;\n  }\n}\nexport default DataManager;","map":{"version":3,"names":["DataManager","constructor","responses","context","metadata","startTime","Date","toISOString","lastUpdated","saveResponse","questionId","value","getResponse","getResponses","setResponses","setContext","key","getContext","addToContext","updates","getMetadata","calculateCompletionTime","start","end","diffMs","diffMins","Math","round","reset","export","import","data"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/engine/DataManager.js"],"sourcesContent":["\nexport class DataManager {\n    constructor() {\n        this.responses = {};\n        this.context = {};\n        this.metadata = {\n            startTime: new Date().toISOString(),\n            lastUpdated: new Date().toISOString()\n        };\n    }\n\n    saveResponse(questionId, value) {\n        this.responses[questionId] = value;\n        this.metadata.lastUpdated = new Date().toISOString();\n    }\n\n    getResponse(questionId) {\n        return this.responses[questionId];\n    }\n\n    getResponses() {\n        return { ...this.responses };\n    }\n\n    setResponses(responses) {\n        this.responses = { ...responses };\n    }\n\n    setContext(key, value) {\n        this.context[key] = value;\n    }\n\n    getContext(key) {\n        if (key) {\n            return this.context[key];\n        }\n        return { ...this.context };\n    }\n\n    addToContext(updates) {\n        this.context = { ...this.context, ...updates };\n    }\n\n    getMetadata() {\n        return { ...this.metadata };\n    }\n\n    calculateCompletionTime() {\n        const start = new Date(this.metadata.startTime);\n        const end = new Date();\n        const diffMs = end - start;\n        const diffMins = Math.round(diffMs / 60000);\n        return diffMins;\n    }\n\n    reset() {\n        this.responses = {};\n        this.context = {};\n        this.metadata = {\n            startTime: new Date().toISOString(),\n            lastUpdated: new Date().toISOString()\n        };\n    }\n\n    export() {\n        return {\n            responses: this.getResponses(),\n            context: this.getContext(),\n            metadata: this.getMetadata()\n        };\n    }\n\n    import(data) {\n        if (data.responses) this.responses = data.responses;\n        if (data.context) this.context = data.context;\n        if (data.metadata) this.metadata = data.metadata;\n    }\n}\n\nexport default DataManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}