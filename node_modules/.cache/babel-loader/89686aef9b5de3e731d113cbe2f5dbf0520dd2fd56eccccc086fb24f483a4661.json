{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Documents/GitHub/assessor/src/core/components/visualizations/ROIProjection.jsx\";\nimport React from 'react';\nimport styles from './Visualizations.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ROIProjection = ({\n  investment,\n  returns = [],\n  // Array of {month, value, label}\n  breakEvenMonth,\n  currency = '£'\n}) => {\n  var _returns$;\n  const maxValue = Math.max(investment, ...returns.map(r => r.value)) * 1.2;\n  const chartWidth = returns.length * 60 + 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.roiContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"ROI Projection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.roiChart,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: `0 0 ${chartWidth} 300`,\n        preserveAspectRatio: \"xMidYMid meet\",\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"50\",\n          y1: 250 - investment / maxValue * 200,\n          x2: chartWidth - 50,\n          y2: 250 - investment / maxValue * 200,\n          stroke: \"#ff6666\",\n          strokeWidth: \"2\",\n          strokeDasharray: \"4,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M 50,250 ${returns.map((r, i) => `L ${50 + (i + 1) * 60},${250 - r.value / maxValue * 200}`).join(' ')}`,\n          fill: \"none\",\n          stroke: \"#66ff66\",\n          strokeWidth: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), breakEvenMonth && /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 50 + breakEvenMonth * 60,\n          cy: 250 - investment / maxValue * 200,\n          r: \"6\",\n          fill: \"#ffff66\",\n          stroke: \"#ffff66\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), returns.map((r, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: 50 + (i + 1) * 60,\n            cy: 250 - r.value / maxValue * 200,\n            r: \"4\",\n            fill: \"#66ff66\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: 50 + (i + 1) * 60,\n            y: 270,\n            textAnchor: \"middle\",\n            className: styles.monthLabel,\n            children: [\"M\", i + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"30\",\n          y: 250 - investment / maxValue * 200,\n          className: styles.valueLabel,\n          children: [currency, Math.round(investment / 1000), \"k\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.roiSummary,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roiMetric,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Investment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [currency, investment.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roiMetric,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Break-even:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Month \", breakEvenMonth]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roiMetric,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"12-Month ROI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [Math.round((((_returns$ = returns[11]) === null || _returns$ === void 0 ? void 0 : _returns$.value) / investment - 1) * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = ROIProjection;\nvar _c;\n$RefreshReg$(_c, \"ROIProjection\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","ROIProjection","investment","returns","breakEvenMonth","currency","_returns$","maxValue","Math","max","map","r","value","chartWidth","length","className","roiContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","roiChart","viewBox","preserveAspectRatio","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","d","i","join","fill","cx","cy","x","y","textAnchor","monthLabel","valueLabel","round","roiSummary","roiMetric","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/components/visualizations/ROIProjection.jsx"],"sourcesContent":["import React from 'react';\nimport styles from './Visualizations.module.css';\n\nexport const ROIProjection = ({\n  investment,\n  returns = [], // Array of {month, value, label}\n  breakEvenMonth,\n  currency = '£'\n}) => {\n  const maxValue = Math.max(investment, ...returns.map(r => r.value)) * 1.2;\n  const chartWidth = returns.length * 60 + 100;\n  \n  return (\n    <div className={styles.roiContainer}>\n      <h3>ROI Projection</h3>\n      \n      <div className={styles.roiChart}>\n        <svg viewBox={`0 0 ${chartWidth} 300`} preserveAspectRatio=\"xMidYMid meet\">\n          {/* Investment line */}\n          <line\n            x1=\"50\"\n            y1={250 - (investment / maxValue) * 200}\n            x2={chartWidth - 50}\n            y2={250 - (investment / maxValue) * 200}\n            stroke=\"#ff6666\"\n            strokeWidth=\"2\"\n            strokeDasharray=\"4,2\"\n          />\n          \n          {/* ROI curve */}\n          <path\n            d={`M 50,250 ${returns.map((r, i) => \n              `L ${50 + (i + 1) * 60},${250 - (r.value / maxValue) * 200}`\n            ).join(' ')}`}\n            fill=\"none\"\n            stroke=\"#66ff66\"\n            strokeWidth=\"3\"\n          />\n          \n          {/* Break-even point */}\n          {breakEvenMonth && (\n            <circle\n              cx={50 + breakEvenMonth * 60}\n              cy={250 - (investment / maxValue) * 200}\n              r=\"6\"\n              fill=\"#ffff66\"\n              stroke=\"#ffff66\"\n              strokeWidth=\"2\"\n            />\n          )}\n          \n          {/* Month markers */}\n          {returns.map((r, i) => (\n            <g key={i}>\n              <circle\n                cx={50 + (i + 1) * 60}\n                cy={250 - (r.value / maxValue) * 200}\n                r=\"4\"\n                fill=\"#66ff66\"\n              />\n              <text\n                x={50 + (i + 1) * 60}\n                y={270}\n                textAnchor=\"middle\"\n                className={styles.monthLabel}\n              >\n                M{i + 1}\n              </text>\n            </g>\n          ))}\n          \n          {/* Y-axis labels */}\n          <text x=\"30\" y={250 - (investment / maxValue) * 200} className={styles.valueLabel}>\n            {currency}{Math.round(investment / 1000)}k\n          </text>\n        </svg>\n      </div>\n      \n      <div className={styles.roiSummary}>\n        <div className={styles.roiMetric}>\n          <span>Investment:</span>\n          <strong>{currency}{investment.toLocaleString()}</strong>\n        </div>\n        <div className={styles.roiMetric}>\n          <span>Break-even:</span>\n          <strong>Month {breakEvenMonth}</strong>\n        </div>\n        <div className={styles.roiMetric}>\n          <span>12-Month ROI:</span>\n          <strong>{Math.round((returns[11]?.value / investment - 1) * 100)}%</strong>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}