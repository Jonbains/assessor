{"ast":null,"code":"/**\n * ResultsAdapter for inhouse-marketing assessment\n * Transforms raw scoring engine output into a consistent format for the results view\n */\n\nclass InhouseMarketingResultsAdapter {\n  /**\n   * Adapts raw scoring engine results to the format expected by ResultsView\n   * @param {Object} rawResults - Raw output from the scoring engine\n   * @param {Function} getResponse - Function to retrieve saved responses\n   * @returns {Object} - Formatted results object\n   */\n  adaptResults(rawResults, getResponse) {\n    console.log('InhouseMarketingResultsAdapter: Starting adaptation process');\n\n    // Ensure we have valid raw results, or create defaults\n    if (!rawResults) {\n      console.warn('InhouseMarketingResultsAdapter: No raw results provided, creating defaults');\n      rawResults = {\n        overall: 35,\n        dimensions: {\n          humanReadiness: 40,\n          technicalReadiness: 30,\n          activityAutomation: 35\n        }\n      };\n    }\n    console.log('InhouseMarketingResultsAdapter: Processing raw results', Object.keys(rawResults || {}));\n\n    // Extract key data points from raw results with fallbacks\n    const overallScore = rawResults.overall || 35;\n    const dimensionScores = rawResults.dimensions || {\n      humanReadiness: 40,\n      technicalReadiness: 30,\n      activityAutomation: 35\n    };\n    const categoryScores = rawResults.categoryScores || {};\n    const activityScores = rawResults.activityScores || {};\n\n    // Create synthetic insights if none exist\n    let insights = rawResults.insights || [];\n    if (!insights.length) {\n      console.log('InhouseMarketingResultsAdapter: Creating synthetic insights');\n      insights = [{\n        type: 'strength',\n        text: 'Team shows openness to new tools and technologies'\n      }, {\n        type: 'strength',\n        text: 'Basic technical foundation exists for building capabilities'\n      }, {\n        type: 'weakness',\n        text: 'Limited automation expertise within the current team'\n      }, {\n        type: 'weakness',\n        text: 'Resource constraints may impact implementation timelines'\n      }];\n    }\n\n    // Create priorities if none exist\n    let priorities = rawResults.priorities || [];\n    if (!priorities.length) {\n      console.log('InhouseMarketingResultsAdapter: Creating synthetic priorities');\n      priorities = [{\n        area: 'Automation Foundations',\n        timeframe: 'short',\n        impact: 'High',\n        effort: 'Low',\n        steps: ['Identify key processes', 'Research appropriate tools', 'Plan implementation phases']\n      }, {\n        area: 'Content Production',\n        timeframe: 'medium',\n        impact: 'High',\n        effort: 'Medium',\n        steps: ['Create content templates', 'Establish workflow', 'Train team on tools']\n      }];\n    }\n    const readinessLevel = rawResults.readinessLevel || {};\n    const rawMarketPosition = rawResults.marketPosition || {};\n    const savingsPotential = rawResults.savingsPotential || {\n      annualSavings: '$20,000-$40,000',\n      timeReduction: '25-30%',\n      roi: '150-200%'\n    };\n\n    // Get metadata from responses if available\n    const allResponses = {};\n    try {\n      // Get all saved question responses\n      const questionTypes = ['qualifying', 'service_selection', 'dynamic_questions'];\n      questionTypes.forEach(type => {\n        const savedData = getResponse(type);\n        if (savedData) {\n          Object.assign(allResponses, savedData);\n        }\n      });\n      console.log('InhouseMarketingResultsAdapter: Retrieved all responses', allResponses);\n    } catch (error) {\n      console.error('InhouseMarketingResultsAdapter: Error retrieving responses:', error);\n    }\n\n    // Extract key context data from responses or raw results\n    const companySize = allResponses.company_size || rawResults.companySize || 'small';\n    const sector = allResponses.sector || rawResults.sector || {};\n\n    // Get selected service/activity data - crucial for tailored recommendations\n    const selectedServices = allResponses.selectedServices || {};\n    // Default to some common activities if none were selected\n    let selectedActivities = Object.keys(selectedServices).filter(key => selectedServices[key] > 0.05) || [];\n    if (!selectedActivities.length) {\n      console.log('InhouseMarketingResultsAdapter: No activities selected, using defaults');\n      selectedActivities = ['content_marketing', 'email_marketing', 'social_media'];\n    }\n    console.log('Selected services/activities for recommendations:', selectedActivities);\n    console.log('Sector context:', sector);\n\n    // Generate readiness level headline based on overall score\n    const getReadinessHeadline = score => {\n      if (score < 40) return 'Urgent Action Required';\n      if (score < 60) return 'Early Stage Adaptation';\n      if (score < 80) return 'Building Strong Capability';\n      return 'Marketing Transformation Ready';\n    };\n\n    // Format data in the structure expected by InhouseResultsView component\n    const executiveSummary = {\n      headline: getReadinessHeadline(overallScore),\n      subheadline: `Your organization scored ${overallScore} out of 100 on marketing readiness.`,\n      summary: `Based on your assessment responses, we've analyzed your organization's readiness for in-house marketing transformation across key dimensions. Your overall score of ${overallScore} indicates ${overallScore < 50 ? 'significant opportunities for improvement' : 'a solid foundation with targeted improvement areas'}.`,\n      strengths: insights.filter(insight => insight.type === 'strength').map(s => s.text) || ['Team shows openness to new tools', 'Basic technical foundation exists'],\n      weaknesses: insights.filter(insight => insight.type === 'weakness').map(w => w.text) || ['Limited automation expertise', 'Resource constraints may impact implementation']\n    };\n\n    // Format market position data\n    const marketPosition = {\n      position: rawMarketPosition.position || 'Developing',\n      description: rawMarketPosition.description || 'Your organization is in the developing stage of marketing maturity.',\n      competitiveAnalysis: {\n        ahead: rawMarketPosition.competitiveAdvantages || ['Early adoption of some automation tools'],\n        behind: rawMarketPosition.competitiveDisadvantages || ['Limited cross-channel integration']\n      },\n      industryBenchmark: {\n        score: rawMarketPosition.industryAverage || Math.max(30, overallScore - 15),\n        comparison: overallScore > (rawMarketPosition.industryAverage || 50) ? 'ahead' : 'behind'\n      }\n    };\n\n    // Service-specific recommendation mappings\n    const serviceRecommendations = {\n      content_marketing: {\n        quick: {\n          title: 'Implement Content Calendar',\n          description: 'Organize your content production pipeline with a structured calendar',\n          impact: 'High',\n          effort: 'Low',\n          implementation: ['Audit existing content', 'Define content themes', 'Create 90-day calendar']\n        },\n        medium: 'Develop content repurposing workflow',\n        long: 'Implement AI-assisted content creation'\n      },\n      email_marketing: {\n        quick: {\n          title: 'Set Up Welcome Sequence',\n          description: 'Create an automated onboarding email series for new subscribers',\n          impact: 'High',\n          effort: 'Medium',\n          implementation: ['Map customer journey', 'Draft 5-email sequence', 'Implement automation triggers']\n        },\n        medium: 'Segment email list based on behavior',\n        long: 'Implement predictive send-time optimization'\n      },\n      social_media: {\n        quick: {\n          title: 'Create Content Batching Process',\n          description: 'Implement efficient process for creating social posts in batches',\n          impact: 'Medium',\n          effort: 'Low',\n          implementation: ['Set up content templates', 'Schedule monthly batching sessions', 'Use scheduling tools']\n        },\n        medium: 'Develop cross-platform content strategy',\n        long: 'Implement social listening and response system'\n      },\n      seo_sem: {\n        quick: {\n          title: 'Conduct Keyword Gap Analysis',\n          description: 'Identify untapped keyword opportunities vs competitors',\n          impact: 'High',\n          effort: 'Medium',\n          implementation: ['Analyze top 3 competitors', 'Identify content gaps', 'Prioritize quick-win terms']\n        },\n        medium: 'Implement technical SEO improvements',\n        long: 'Create hub and spoke content strategy'\n      },\n      analytics_data: {\n        quick: {\n          title: 'Set Up Basic Dashboard',\n          description: 'Create a centralized view of key marketing metrics',\n          impact: 'Medium',\n          effort: 'Low',\n          implementation: ['Define KPIs', 'Connect data sources', 'Build initial dashboard']\n        },\n        medium: 'Implement campaign attribution model',\n        long: 'Develop predictive analytics capabilities'\n      },\n      paid_advertising: {\n        quick: {\n          title: 'Audit Ad Account Structure',\n          description: 'Reorganize campaigns for better tracking and optimization',\n          impact: 'Medium',\n          effort: 'Low',\n          implementation: ['Review current structure', 'Create logical hierarchy', 'Implement proper tagging']\n        },\n        medium: 'Implement cross-channel retargeting',\n        long: 'Develop AI-driven bidding strategy'\n      },\n      creative_design: {\n        quick: {\n          title: 'Create Brand Style Guide',\n          description: 'Document visual standards for consistent brand presentation',\n          impact: 'Medium',\n          effort: 'Low',\n          implementation: ['Audit current assets', 'Document standards', 'Create template library']\n        },\n        medium: 'Implement design workflow system',\n        long: 'Develop modular design system'\n      },\n      marketing_automation: {\n        quick: {\n          title: 'Map Automation Opportunities',\n          description: 'Identify and prioritize processes for automation',\n          impact: 'High',\n          effort: 'Low',\n          implementation: ['Document manual processes', 'Prioritize by impact/effort', 'Select initial project']\n        },\n        medium: 'Implement cross-channel triggers',\n        long: 'Create full customer journey automation'\n      }\n    };\n\n    // Generate service-specific quick wins based on selected services\n    const quickWins = selectedActivities.length > 0 ? selectedActivities.filter(service => serviceRecommendations[service]).map(service => serviceRecommendations[service].quick).filter(Boolean).slice(0, 3) : priorities.filter(p => p.timeframe === 'short').map(p => ({\n      title: p.title || 'Implement basic automation',\n      description: p.description || 'Quick impact opportunity requiring minimal investment',\n      impact: p.impact || 'Medium',\n      effort: p.effort || 'Low',\n      implementation: p.steps || ['Identify process', 'Select tool', 'Initial setup']\n    })) || [{\n      title: 'Implement basic email automation',\n      description: 'Set up fundamental automated email sequences',\n      impact: 'Medium',\n      effort: 'Low',\n      implementation: ['Audit current emails', 'Select automation triggers', 'Build first sequence']\n    }, {\n      title: 'Enhance analytics tracking',\n      description: 'Improve measurement of key marketing activities',\n      impact: 'High',\n      effort: 'Medium',\n      implementation: ['Audit current tracking', 'Define key metrics', 'Implement tracking']\n    }];\n\n    // Generate service-specific medium and long-term recommendations\n    const mediumTermActions = selectedActivities.length > 0 ? selectedActivities.filter(service => serviceRecommendations[service]).map(service => serviceRecommendations[service].medium).filter(Boolean).slice(0, 4) : priorities.filter(p => p.timeframe === 'medium').map(p => p.title) || ['Expand automation scope', 'Implement cross-channel coordination', 'Enhance reporting'];\n    const longTermActions = selectedActivities.length > 0 ? selectedActivities.filter(service => serviceRecommendations[service]).map(service => serviceRecommendations[service].long).filter(Boolean).slice(0, 4) : priorities.filter(p => p.timeframe === 'long').map(p => p.title) || ['Implement advanced personalization', 'Predictive analytics integration', 'Full marketing operations optimization'];\n\n    // Sector-specific investment guidelines\n    const sectorInvestmentGuidelines = {\n      b2b_saas: 'Estimated investment of $30,000-60,000 with 4-6x ROI potential within 12 months',\n      ecommerce: 'Estimated investment of $25,000-55,000 with 3-5x ROI potential within 9 months',\n      professional_services: 'Estimated investment of $20,000-45,000 with 2-4x ROI potential within 12 months',\n      healthcare: 'Estimated investment of $35,000-70,000 with 2-3x ROI potential within 15 months',\n      manufacturing: 'Estimated investment of $25,000-50,000 with 2-4x ROI potential within 12 months'\n    };\n\n    // Strategic roadmap with phases - now with service-specific recommendations\n    const strategicRoadmap = {\n      overview: 'A 9-month phased approach to transform your marketing capabilities',\n      phase1: {\n        title: 'Foundation Building',\n        timeframe: '0-3 months',\n        focus: 'Establish fundamental processes and quick wins',\n        actions: quickWins.map(win => win.title),\n        expectedOutcome: 'Baseline processes established with initial efficiency gains'\n      },\n      phase2: {\n        title: 'Capability Expansion',\n        timeframe: '3-6 months',\n        focus: 'Scale successful initiatives and add complexity',\n        actions: mediumTermActions,\n        expectedOutcome: 'Improved cross-channel effectiveness with better measurement'\n      },\n      phase3: {\n        title: 'Advanced Optimization',\n        timeframe: '6-9 months',\n        focus: 'Refine and optimize for maximum impact',\n        actions: longTermActions,\n        expectedOutcome: 'Highly optimized, data-driven marketing operation'\n      },\n      investmentGuide: savingsPotential.description || sector.id && sectorInvestmentGuidelines[sector.id] || 'Estimated investment of $20,000-50,000 with 3-5x ROI potential within 12 months'\n    };\n\n    // Service-specific expected outcomes\n    const serviceOutcomes = {\n      content_marketing: {\n        area: 'Content Effectiveness',\n        keyMetric: 'Content Engagement Rate',\n        baseline: 'Current baseline',\n        target: '45% increase',\n        timeframe: '6 months'\n      },\n      email_marketing: {\n        area: 'Email Performance',\n        keyMetric: 'Email Conversion Rate',\n        baseline: 'Current baseline',\n        target: '30% increase',\n        timeframe: '3 months'\n      },\n      social_media: {\n        area: 'Social Engagement',\n        keyMetric: 'Social Media Conversion',\n        baseline: 'Current baseline',\n        target: '40% increase',\n        timeframe: '6 months'\n      },\n      seo_sem: {\n        area: 'Organic Traffic',\n        keyMetric: 'Qualified Organic Visitors',\n        baseline: 'Current baseline',\n        target: '50% increase',\n        timeframe: '9 months'\n      },\n      analytics_data: {\n        area: 'Decision Quality',\n        keyMetric: 'Data-Driven Decisions',\n        baseline: '20% of decisions',\n        target: '80% of decisions',\n        timeframe: '6 months'\n      },\n      paid_advertising: {\n        area: 'Ad Performance',\n        keyMetric: 'Cost Per Acquisition',\n        baseline: 'Current baseline',\n        target: '35% reduction',\n        timeframe: '3 months'\n      },\n      creative_design: {\n        area: 'Brand Consistency',\n        keyMetric: 'Brand Recognition',\n        baseline: 'Current level',\n        target: '50% improvement',\n        timeframe: '9 months'\n      },\n      marketing_automation: {\n        area: 'Process Efficiency',\n        keyMetric: 'Time Spent on Routine Tasks',\n        baseline: '60% of marketing time',\n        target: '25% of marketing time',\n        timeframe: '6 months'\n      }\n    };\n\n    // Generate service-specific outcomes based on selected services\n    const serviceSpecificOutcomes = selectedActivities.length > 0 ? selectedActivities.filter(service => serviceOutcomes[service]).map(service => serviceOutcomes[service]).filter(Boolean) : [];\n\n    // Expected outcomes - combine standard outcomes with service-specific ones\n    const expectedOutcomes = [\n    // Always include these core outcomes\n    {\n      area: 'Marketing Efficiency',\n      keyMetric: 'Time Spent on Routine Tasks',\n      baseline: '60% of marketing time',\n      target: '30% of marketing time',\n      timeframe: '6 months'\n    }, {\n      area: 'Lead Generation',\n      keyMetric: 'Marketing Qualified Leads',\n      baseline: 'Current baseline',\n      target: '35% increase',\n      timeframe: '6 months'\n    }, {\n      area: 'Marketing ROI',\n      keyMetric: 'Return on Marketing Investment',\n      baseline: 'Current baseline',\n      target: '40% improvement',\n      timeframe: '12 months'\n    },\n    // Add up to 3 service-specific outcomes\n    ...serviceSpecificOutcomes.slice(0, 3)];\n\n    // Next steps\n    const nextSteps = {\n      primaryCTA: {\n        title: 'Schedule Your Strategy Session',\n        description: 'Get personalized guidance on implementing your marketing transformation plan',\n        buttonText: 'Book Your QuickMap Session',\n        link: 'https://calendly.com/your-booking-link'\n      },\n      alternatives: [{\n        text: 'Download Full Report',\n        description: 'Get a detailed PDF version of this assessment',\n        link: '#download-report'\n      }, {\n        text: 'Share With Your Team',\n        description: 'Email these results to key stakeholders',\n        link: '#share-results'\n      }]\n    };\n\n    // Calculate maturity levels for different dimensions based on dimension scores\n    const maturityLevels = {\n      humanReadiness: {\n        score: dimensionScores.humanReadiness || 0,\n        level: getMaturityLevel(dimensionScores.humanReadiness || 0),\n        label: 'Team Readiness'\n      },\n      technicalReadiness: {\n        score: dimensionScores.technicalReadiness || 0,\n        level: getMaturityLevel(dimensionScores.technicalReadiness || 0),\n        label: 'Technical Foundation'\n      },\n      processMaturity: {\n        score: dimensionScores.processMaturity || dimensionScores.activityAutomation || 0,\n        level: getMaturityLevel(dimensionScores.processMaturity || dimensionScores.activityAutomation || 0),\n        label: 'Process Maturity'\n      },\n      overallMaturity: {\n        score: overallScore,\n        level: getMaturityLevel(overallScore),\n        label: 'Overall Marketing Maturity'\n      }\n    };\n\n    // Helper function to determine maturity level from score\n    function getMaturityLevel(score) {\n      if (score < 30) return 'Initial';\n      if (score < 50) return 'Developing';\n      if (score < 70) return 'Defined';\n      if (score < 85) return 'Managed';\n      return 'Optimized';\n    }\n\n    // Complete results object including both original raw data and the formatted view data\n    return {\n      // For the InhouseResultsView component\n      executiveSummary,\n      marketPosition,\n      quickWins,\n      strategicRoadmap,\n      expectedOutcomes,\n      nextSteps,\n      maturityLevels,\n      // Original assessment metadata\n      assessmentType: 'inhouse-marketing',\n      timestamp: rawResults.timestamp || new Date().toISOString(),\n      // Individual question responses\n      responses: allResponses,\n      // Context data\n      context: {\n        companySize,\n        sector,\n        selectedActivities\n      },\n      // Original results data\n      results: {\n        overall: overallScore,\n        dimensions: dimensionScores,\n        categoryScores: categoryScores,\n        activityScores: activityScores,\n        insights: insights,\n        priorities: priorities,\n        readinessLevel: readinessLevel,\n        marketPosition: rawMarketPosition,\n        savingsPotential: savingsPotential\n      },\n      // Engine data for completeness\n      engineData: {\n        allResponses: allResponses,\n        context: {\n          companySize,\n          sector,\n          selectedActivities\n        },\n        progressData: {\n          current: 5,\n          total: 6,\n          percentage: 80,\n          stageName: 'results'\n        },\n        completionStatus: true\n      },\n      // Include raw data for debugging\n      _rawData: rawResults\n    };\n  }\n}\nexport default InhouseMarketingResultsAdapter;","map":{"version":3,"names":["InhouseMarketingResultsAdapter","adaptResults","rawResults","getResponse","console","log","warn","overall","dimensions","humanReadiness","technicalReadiness","activityAutomation","Object","keys","overallScore","dimensionScores","categoryScores","activityScores","insights","length","type","text","priorities","area","timeframe","impact","effort","steps","readinessLevel","rawMarketPosition","marketPosition","savingsPotential","annualSavings","timeReduction","roi","allResponses","questionTypes","forEach","savedData","assign","error","companySize","company_size","sector","selectedServices","selectedActivities","filter","key","getReadinessHeadline","score","executiveSummary","headline","subheadline","summary","strengths","insight","map","s","weaknesses","w","position","description","competitiveAnalysis","ahead","competitiveAdvantages","behind","competitiveDisadvantages","industryBenchmark","industryAverage","Math","max","comparison","serviceRecommendations","content_marketing","quick","title","implementation","medium","long","email_marketing","social_media","seo_sem","analytics_data","paid_advertising","creative_design","marketing_automation","quickWins","service","Boolean","slice","p","mediumTermActions","longTermActions","sectorInvestmentGuidelines","b2b_saas","ecommerce","professional_services","healthcare","manufacturing","strategicRoadmap","overview","phase1","focus","actions","win","expectedOutcome","phase2","phase3","investmentGuide","id","serviceOutcomes","keyMetric","baseline","target","serviceSpecificOutcomes","expectedOutcomes","nextSteps","primaryCTA","buttonText","link","alternatives","maturityLevels","level","getMaturityLevel","label","processMaturity","overallMaturity","assessmentType","timestamp","Date","toISOString","responses","context","results","engineData","progressData","current","total","percentage","stageName","completionStatus","_rawData"],"sources":["/Users/jon/Documents/GitHub/assessor/src/assessments/inhouse-marketing/ResultsAdapter.js"],"sourcesContent":["/**\n * ResultsAdapter for inhouse-marketing assessment\n * Transforms raw scoring engine output into a consistent format for the results view\n */\n\nclass InhouseMarketingResultsAdapter {\n  /**\n   * Adapts raw scoring engine results to the format expected by ResultsView\n   * @param {Object} rawResults - Raw output from the scoring engine\n   * @param {Function} getResponse - Function to retrieve saved responses\n   * @returns {Object} - Formatted results object\n   */\n  adaptResults(rawResults, getResponse) {\n    console.log('InhouseMarketingResultsAdapter: Starting adaptation process');\n    \n    // Ensure we have valid raw results, or create defaults\n    if (!rawResults) {\n      console.warn('InhouseMarketingResultsAdapter: No raw results provided, creating defaults');\n      rawResults = { \n        overall: 35,\n        dimensions: {\n          humanReadiness: 40,\n          technicalReadiness: 30,\n          activityAutomation: 35\n        }\n      };\n    }\n\n    console.log('InhouseMarketingResultsAdapter: Processing raw results', Object.keys(rawResults || {}));\n    \n    // Extract key data points from raw results with fallbacks\n    const overallScore = rawResults.overall || 35;\n    const dimensionScores = rawResults.dimensions || {\n      humanReadiness: 40,\n      technicalReadiness: 30,\n      activityAutomation: 35\n    };\n    const categoryScores = rawResults.categoryScores || {};\n    const activityScores = rawResults.activityScores || {};\n    \n    // Create synthetic insights if none exist\n    let insights = rawResults.insights || [];\n    if (!insights.length) {\n      console.log('InhouseMarketingResultsAdapter: Creating synthetic insights');\n      insights = [\n        { type: 'strength', text: 'Team shows openness to new tools and technologies' },\n        { type: 'strength', text: 'Basic technical foundation exists for building capabilities' },\n        { type: 'weakness', text: 'Limited automation expertise within the current team' },\n        { type: 'weakness', text: 'Resource constraints may impact implementation timelines' }\n      ];\n    }\n    \n    // Create priorities if none exist\n    let priorities = rawResults.priorities || [];\n    if (!priorities.length) {\n      console.log('InhouseMarketingResultsAdapter: Creating synthetic priorities');\n      priorities = [\n        { \n          area: 'Automation Foundations', \n          timeframe: 'short',\n          impact: 'High',\n          effort: 'Low',\n          steps: ['Identify key processes', 'Research appropriate tools', 'Plan implementation phases']\n        },\n        {\n          area: 'Content Production',\n          timeframe: 'medium',\n          impact: 'High',\n          effort: 'Medium',\n          steps: ['Create content templates', 'Establish workflow', 'Train team on tools']\n        }\n      ];\n    }\n    \n    const readinessLevel = rawResults.readinessLevel || {};\n    const rawMarketPosition = rawResults.marketPosition || {};\n    const savingsPotential = rawResults.savingsPotential || {\n      annualSavings: '$20,000-$40,000',\n      timeReduction: '25-30%',\n      roi: '150-200%'\n    };\n    \n    // Get metadata from responses if available\n    const allResponses = {};\n    try {\n      // Get all saved question responses\n      const questionTypes = ['qualifying', 'service_selection', 'dynamic_questions'];\n      questionTypes.forEach(type => {\n        const savedData = getResponse(type);\n        if (savedData) {\n          Object.assign(allResponses, savedData);\n        }\n      });\n      console.log('InhouseMarketingResultsAdapter: Retrieved all responses', allResponses);\n    } catch (error) {\n      console.error('InhouseMarketingResultsAdapter: Error retrieving responses:', error);\n    }\n    \n    // Extract key context data from responses or raw results\n    const companySize = allResponses.company_size || rawResults.companySize || 'small';\n    const sector = allResponses.sector || rawResults.sector || {};\n    \n    // Get selected service/activity data - crucial for tailored recommendations\n    const selectedServices = allResponses.selectedServices || {};\n    // Default to some common activities if none were selected\n    let selectedActivities = Object.keys(selectedServices).filter(key => selectedServices[key] > 0.05) || [];\n    if (!selectedActivities.length) {\n      console.log('InhouseMarketingResultsAdapter: No activities selected, using defaults');\n      selectedActivities = ['content_marketing', 'email_marketing', 'social_media'];\n    }\n    \n    console.log('Selected services/activities for recommendations:', selectedActivities);\n    console.log('Sector context:', sector);\n    \n    // Generate readiness level headline based on overall score\n    const getReadinessHeadline = (score) => {\n      if (score < 40) return 'Urgent Action Required';\n      if (score < 60) return 'Early Stage Adaptation';\n      if (score < 80) return 'Building Strong Capability';\n      return 'Marketing Transformation Ready';\n    };\n\n    // Format data in the structure expected by InhouseResultsView component\n    const executiveSummary = {\n      headline: getReadinessHeadline(overallScore),\n      subheadline: `Your organization scored ${overallScore} out of 100 on marketing readiness.`,\n      summary: `Based on your assessment responses, we've analyzed your organization's readiness for in-house marketing transformation across key dimensions. Your overall score of ${overallScore} indicates ${overallScore < 50 ? 'significant opportunities for improvement' : 'a solid foundation with targeted improvement areas'}.`,\n      strengths: insights.filter(insight => insight.type === 'strength').map(s => s.text) || \n        ['Team shows openness to new tools', 'Basic technical foundation exists'],\n      weaknesses: insights.filter(insight => insight.type === 'weakness').map(w => w.text) || \n        ['Limited automation expertise', 'Resource constraints may impact implementation']\n    };\n\n    // Format market position data\n    const marketPosition = {\n      position: rawMarketPosition.position || 'Developing',\n      description: rawMarketPosition.description || 'Your organization is in the developing stage of marketing maturity.',\n      competitiveAnalysis: {\n        ahead: rawMarketPosition.competitiveAdvantages || ['Early adoption of some automation tools'],\n        behind: rawMarketPosition.competitiveDisadvantages || ['Limited cross-channel integration']\n      },\n      industryBenchmark: {\n        score: rawMarketPosition.industryAverage || Math.max(30, overallScore - 15),\n        comparison: overallScore > (rawMarketPosition.industryAverage || 50) ? 'ahead' : 'behind'\n      }\n    };\n\n    // Service-specific recommendation mappings\n    const serviceRecommendations = {\n      content_marketing: {\n        quick: {\n          title: 'Implement Content Calendar',\n          description: 'Organize your content production pipeline with a structured calendar',\n          impact: 'High',\n          effort: 'Low',\n          implementation: ['Audit existing content', 'Define content themes', 'Create 90-day calendar']\n        },\n        medium: 'Develop content repurposing workflow',\n        long: 'Implement AI-assisted content creation'\n      },\n      email_marketing: {\n        quick: {\n          title: 'Set Up Welcome Sequence',\n          description: 'Create an automated onboarding email series for new subscribers',\n          impact: 'High',\n          effort: 'Medium',\n          implementation: ['Map customer journey', 'Draft 5-email sequence', 'Implement automation triggers']\n        },\n        medium: 'Segment email list based on behavior',\n        long: 'Implement predictive send-time optimization'\n      },\n      social_media: {\n        quick: {\n          title: 'Create Content Batching Process',\n          description: 'Implement efficient process for creating social posts in batches',\n          impact: 'Medium',\n          effort: 'Low',\n          implementation: ['Set up content templates', 'Schedule monthly batching sessions', 'Use scheduling tools']\n        },\n        medium: 'Develop cross-platform content strategy',\n        long: 'Implement social listening and response system'\n      },\n      seo_sem: {\n        quick: {\n          title: 'Conduct Keyword Gap Analysis',\n          description: 'Identify untapped keyword opportunities vs competitors',\n          impact: 'High',\n          effort: 'Medium',\n          implementation: ['Analyze top 3 competitors', 'Identify content gaps', 'Prioritize quick-win terms']\n        },\n        medium: 'Implement technical SEO improvements',\n        long: 'Create hub and spoke content strategy'\n      },\n      analytics_data: {\n        quick: {\n          title: 'Set Up Basic Dashboard',\n          description: 'Create a centralized view of key marketing metrics',\n          impact: 'Medium',\n          effort: 'Low',\n          implementation: ['Define KPIs', 'Connect data sources', 'Build initial dashboard']\n        },\n        medium: 'Implement campaign attribution model',\n        long: 'Develop predictive analytics capabilities'\n      },\n      paid_advertising: {\n        quick: {\n          title: 'Audit Ad Account Structure',\n          description: 'Reorganize campaigns for better tracking and optimization',\n          impact: 'Medium',\n          effort: 'Low',\n          implementation: ['Review current structure', 'Create logical hierarchy', 'Implement proper tagging']\n        },\n        medium: 'Implement cross-channel retargeting',\n        long: 'Develop AI-driven bidding strategy'\n      },\n      creative_design: {\n        quick: {\n          title: 'Create Brand Style Guide',\n          description: 'Document visual standards for consistent brand presentation',\n          impact: 'Medium',\n          effort: 'Low',\n          implementation: ['Audit current assets', 'Document standards', 'Create template library']\n        },\n        medium: 'Implement design workflow system',\n        long: 'Develop modular design system'\n      },\n      marketing_automation: {\n        quick: {\n          title: 'Map Automation Opportunities',\n          description: 'Identify and prioritize processes for automation',\n          impact: 'High',\n          effort: 'Low',\n          implementation: ['Document manual processes', 'Prioritize by impact/effort', 'Select initial project']\n        },\n        medium: 'Implement cross-channel triggers',\n        long: 'Create full customer journey automation'\n      }\n    };\n    \n    // Generate service-specific quick wins based on selected services\n    const quickWins = selectedActivities.length > 0 \n      ? selectedActivities\n        .filter(service => serviceRecommendations[service])\n        .map(service => serviceRecommendations[service].quick)\n        .filter(Boolean)\n        .slice(0, 3)\n      : priorities.filter(p => p.timeframe === 'short').map(p => ({\n          title: p.title || 'Implement basic automation',\n          description: p.description || 'Quick impact opportunity requiring minimal investment',\n          impact: p.impact || 'Medium',\n          effort: p.effort || 'Low',\n          implementation: p.steps || ['Identify process', 'Select tool', 'Initial setup']\n        })) || [\n          {\n            title: 'Implement basic email automation',\n            description: 'Set up fundamental automated email sequences',\n            impact: 'Medium',\n            effort: 'Low',\n            implementation: ['Audit current emails', 'Select automation triggers', 'Build first sequence']\n          },\n          {\n            title: 'Enhance analytics tracking',\n            description: 'Improve measurement of key marketing activities',\n            impact: 'High',\n            effort: 'Medium',\n            implementation: ['Audit current tracking', 'Define key metrics', 'Implement tracking']\n          }\n        ];\n\n    // Generate service-specific medium and long-term recommendations\n    const mediumTermActions = selectedActivities.length > 0 \n      ? selectedActivities\n          .filter(service => serviceRecommendations[service])\n          .map(service => serviceRecommendations[service].medium)\n          .filter(Boolean)\n          .slice(0, 4)\n      : priorities.filter(p => p.timeframe === 'medium').map(p => p.title) || \n          ['Expand automation scope', 'Implement cross-channel coordination', 'Enhance reporting'];\n          \n    const longTermActions = selectedActivities.length > 0 \n      ? selectedActivities\n          .filter(service => serviceRecommendations[service])\n          .map(service => serviceRecommendations[service].long)\n          .filter(Boolean)\n          .slice(0, 4)\n      : priorities.filter(p => p.timeframe === 'long').map(p => p.title) || \n          ['Implement advanced personalization', 'Predictive analytics integration', 'Full marketing operations optimization'];\n    \n    // Sector-specific investment guidelines\n    const sectorInvestmentGuidelines = {\n      b2b_saas: 'Estimated investment of $30,000-60,000 with 4-6x ROI potential within 12 months',\n      ecommerce: 'Estimated investment of $25,000-55,000 with 3-5x ROI potential within 9 months',\n      professional_services: 'Estimated investment of $20,000-45,000 with 2-4x ROI potential within 12 months',\n      healthcare: 'Estimated investment of $35,000-70,000 with 2-3x ROI potential within 15 months',\n      manufacturing: 'Estimated investment of $25,000-50,000 with 2-4x ROI potential within 12 months'\n    };\n    \n    // Strategic roadmap with phases - now with service-specific recommendations\n    const strategicRoadmap = {\n      overview: 'A 9-month phased approach to transform your marketing capabilities',\n      phase1: {\n        title: 'Foundation Building',\n        timeframe: '0-3 months',\n        focus: 'Establish fundamental processes and quick wins',\n        actions: quickWins.map(win => win.title),\n        expectedOutcome: 'Baseline processes established with initial efficiency gains'\n      },\n      phase2: {\n        title: 'Capability Expansion',\n        timeframe: '3-6 months',\n        focus: 'Scale successful initiatives and add complexity',\n        actions: mediumTermActions,\n        expectedOutcome: 'Improved cross-channel effectiveness with better measurement'\n      },\n      phase3: {\n        title: 'Advanced Optimization',\n        timeframe: '6-9 months',\n        focus: 'Refine and optimize for maximum impact',\n        actions: longTermActions,\n        expectedOutcome: 'Highly optimized, data-driven marketing operation'\n      },\n      investmentGuide: savingsPotential.description || \n        (sector.id && sectorInvestmentGuidelines[sector.id]) || \n        'Estimated investment of $20,000-50,000 with 3-5x ROI potential within 12 months'\n    };\n\n    // Service-specific expected outcomes\n    const serviceOutcomes = {\n      content_marketing: {\n        area: 'Content Effectiveness',\n        keyMetric: 'Content Engagement Rate',\n        baseline: 'Current baseline',\n        target: '45% increase',\n        timeframe: '6 months'\n      },\n      email_marketing: {\n        area: 'Email Performance',\n        keyMetric: 'Email Conversion Rate',\n        baseline: 'Current baseline',\n        target: '30% increase',\n        timeframe: '3 months'\n      },\n      social_media: {\n        area: 'Social Engagement',\n        keyMetric: 'Social Media Conversion',\n        baseline: 'Current baseline',\n        target: '40% increase',\n        timeframe: '6 months'\n      },\n      seo_sem: {\n        area: 'Organic Traffic',\n        keyMetric: 'Qualified Organic Visitors',\n        baseline: 'Current baseline',\n        target: '50% increase',\n        timeframe: '9 months'\n      },\n      analytics_data: {\n        area: 'Decision Quality',\n        keyMetric: 'Data-Driven Decisions',\n        baseline: '20% of decisions',\n        target: '80% of decisions',\n        timeframe: '6 months'\n      },\n      paid_advertising: {\n        area: 'Ad Performance',\n        keyMetric: 'Cost Per Acquisition',\n        baseline: 'Current baseline',\n        target: '35% reduction',\n        timeframe: '3 months'\n      },\n      creative_design: {\n        area: 'Brand Consistency',\n        keyMetric: 'Brand Recognition',\n        baseline: 'Current level',\n        target: '50% improvement',\n        timeframe: '9 months'\n      },\n      marketing_automation: {\n        area: 'Process Efficiency',\n        keyMetric: 'Time Spent on Routine Tasks',\n        baseline: '60% of marketing time',\n        target: '25% of marketing time',\n        timeframe: '6 months'\n      }\n    };\n    \n    // Generate service-specific outcomes based on selected services\n    const serviceSpecificOutcomes = selectedActivities.length > 0 \n      ? selectedActivities\n          .filter(service => serviceOutcomes[service])\n          .map(service => serviceOutcomes[service])\n          .filter(Boolean)\n      : [];\n          \n    // Expected outcomes - combine standard outcomes with service-specific ones\n    const expectedOutcomes = [\n      // Always include these core outcomes\n      {\n        area: 'Marketing Efficiency',\n        keyMetric: 'Time Spent on Routine Tasks',\n        baseline: '60% of marketing time',\n        target: '30% of marketing time',\n        timeframe: '6 months'\n      },\n      {\n        area: 'Lead Generation',\n        keyMetric: 'Marketing Qualified Leads',\n        baseline: 'Current baseline',\n        target: '35% increase',\n        timeframe: '6 months'\n      },\n      {\n        area: 'Marketing ROI',\n        keyMetric: 'Return on Marketing Investment',\n        baseline: 'Current baseline',\n        target: '40% improvement',\n        timeframe: '12 months'\n      },\n      // Add up to 3 service-specific outcomes\n      ...serviceSpecificOutcomes.slice(0, 3)\n    ];\n\n    // Next steps\n    const nextSteps = {\n      primaryCTA: {\n        title: 'Schedule Your Strategy Session',\n        description: 'Get personalized guidance on implementing your marketing transformation plan',\n        buttonText: 'Book Your QuickMap Session',\n        link: 'https://calendly.com/your-booking-link'\n      },\n      alternatives: [\n        {\n          text: 'Download Full Report',\n          description: 'Get a detailed PDF version of this assessment',\n          link: '#download-report'\n        },\n        {\n          text: 'Share With Your Team',\n          description: 'Email these results to key stakeholders',\n          link: '#share-results'\n        }\n      ]\n    };\n\n    // Calculate maturity levels for different dimensions based on dimension scores\n    const maturityLevels = {\n      humanReadiness: {\n        score: dimensionScores.humanReadiness || 0,\n        level: getMaturityLevel(dimensionScores.humanReadiness || 0),\n        label: 'Team Readiness'\n      },\n      technicalReadiness: {\n        score: dimensionScores.technicalReadiness || 0,\n        level: getMaturityLevel(dimensionScores.technicalReadiness || 0),\n        label: 'Technical Foundation'\n      },\n      processMaturity: {\n        score: dimensionScores.processMaturity || dimensionScores.activityAutomation || 0,\n        level: getMaturityLevel(dimensionScores.processMaturity || dimensionScores.activityAutomation || 0),\n        label: 'Process Maturity'\n      },\n      overallMaturity: {\n        score: overallScore,\n        level: getMaturityLevel(overallScore),\n        label: 'Overall Marketing Maturity'\n      }\n    };\n    \n    // Helper function to determine maturity level from score\n    function getMaturityLevel(score) {\n      if (score < 30) return 'Initial';\n      if (score < 50) return 'Developing';\n      if (score < 70) return 'Defined';\n      if (score < 85) return 'Managed';\n      return 'Optimized';\n    }\n    \n    // Complete results object including both original raw data and the formatted view data\n    return {\n      // For the InhouseResultsView component\n      executiveSummary,\n      marketPosition,\n      quickWins,\n      strategicRoadmap,\n      expectedOutcomes,\n      nextSteps,\n      maturityLevels,\n      \n      // Original assessment metadata\n      assessmentType: 'inhouse-marketing',\n      timestamp: rawResults.timestamp || new Date().toISOString(),\n      \n      // Individual question responses\n      responses: allResponses,\n      \n      // Context data\n      context: {\n        companySize,\n        sector,\n        selectedActivities\n      },\n      \n      // Original results data\n      results: {\n        overall: overallScore,\n        dimensions: dimensionScores,\n        categoryScores: categoryScores,\n        activityScores: activityScores,\n        insights: insights,\n        priorities: priorities,\n        readinessLevel: readinessLevel,\n        marketPosition: rawMarketPosition,\n        savingsPotential: savingsPotential,\n      },\n      \n      // Engine data for completeness\n      engineData: {\n        allResponses: allResponses,\n        context: {\n          companySize,\n          sector,\n          selectedActivities\n        },\n        progressData: {\n          current: 5,\n          total: 6,\n          percentage: 80,\n          stageName: 'results'\n        },\n        completionStatus: true\n      },\n      \n      // Include raw data for debugging\n      _rawData: rawResults\n    };\n  }\n}\n\nexport default InhouseMarketingResultsAdapter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}