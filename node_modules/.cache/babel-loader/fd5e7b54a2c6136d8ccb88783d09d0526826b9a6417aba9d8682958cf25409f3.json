{"ast":null,"code":"export class ScoringEngine {\n  // Helper methods for category and dimension handling\n  normalizeCategory(category) {\n    // Map various category names to standard categories\n    const categoryMap = {\n      'tech': 'technology',\n      'technology': 'technology',\n      'tools': 'technology',\n      'process': 'process',\n      'processes': 'process',\n      'workflow': 'process',\n      'people': 'people',\n      'team': 'people',\n      'skills': 'people',\n      'talent': 'people',\n      'strategy': 'strategy',\n      'plan': 'strategy',\n      'planning': 'strategy',\n      'content': 'content',\n      'analytics': 'analytics'\n    };\n    return categoryMap[category.toLowerCase()] || 'technology';\n  }\n  formatDimension(dimension) {\n    // Format dimension names for display\n    const dimensionLabels = {\n      'technology': 'Technology',\n      'process': 'Process',\n      'people': 'People',\n      'strategy': 'Strategy',\n      'content': 'Content',\n      'analytics': 'Analytics'\n    };\n    return dimensionLabels[dimension.toLowerCase()] || dimension.charAt(0).toUpperCase() + dimension.slice(1);\n  }\n  generateReport(scores, context) {\n    // Generate a complete report based on scores and context\n    try {\n      const overallScore = scores.overall || 0;\n\n      // Executive summary section\n      const executive = {\n        headline: 'Your Assessment Results',\n        subheadline: 'Detailed analysis and recommendations below',\n        narrative: this.generateSummary(scores),\n        snapshot: this.generateSnapshot(scores, context),\n        keyMetrics: {\n          roi: {\n            value: `${Math.round(overallScore * 1.5)}%`,\n            label: 'Potential ROI',\n            interpretation: overallScore < 40 ? 'Significant room for improvement' : 'Strong foundation for growth'\n          },\n          efficiency: {\n            value: `${Math.round(overallScore * 0.8)}%`,\n            label: 'Operational Efficiency',\n            interpretation: 'Based on your process maturity'\n          },\n          readiness: {\n            value: overallScore < 30 ? 'Low' : overallScore < 60 ? 'Medium' : 'High',\n            label: 'Marketing Readiness',\n            interpretation: 'Your overall marketing maturity'\n          }\n        }\n      };\n\n      // Readiness section\n      const readiness = {\n        title: 'Marketing Readiness Assessment',\n        subtitle: 'How your marketing organization compares across key dimensions',\n        dimensions: this.generateDimensionCards(scores)\n      };\n\n      // Create full report object\n      return {\n        title: 'Marketing Maturity Assessment',\n        summary: this.generateSummary(scores) || 'Thank you for completing the assessment.',\n        executive: executive,\n        readiness: readiness,\n        recommendations: this.generateRecommendations(scores, context),\n        nextSteps: {\n          booking: {\n            headline: 'Ready to Elevate Your Marketing?',\n            subheadline: 'Schedule a consultation to get personalized insights',\n            buttonText: 'Book Your Strategy Session'\n          },\n          urgency: {\n            message: 'Limited spots available this month'\n          },\n          testimonial: {\n            quote: 'The assessment identified exactly where we needed to focus. Six months later, our marketing ROI has doubled.',\n            author: 'Marketing Director',\n            role: 'SaaS Company',\n            result: '107% increase in qualified leads'\n          }\n        },\n        roadmap: this.generateRoadmap(scores),\n        valuation: this.generateValuationImpact(scores, context)\n      };\n    } catch (error) {\n      console.error('Error generating report:', error);\n      return this.generateDefaultReport();\n    }\n  }\n  generateDefaultReport() {\n    // Generate a default report when scoring fails\n    return {\n      title: 'Marketing Maturity Assessment',\n      summary: 'Based on your responses, we have prepared an initial assessment of your marketing maturity.',\n      recommendations: [],\n      nextSteps: {\n        booking: {\n          headline: 'Get a Complete Assessment',\n          subheadline: 'Schedule a consultation to get personalized insights',\n          buttonText: 'Book Your Strategy Session'\n        }\n      },\n      roadmap: {\n        phases: [{\n          name: 'Foundation',\n          duration: '1-3 months',\n          focus: 'Establish core marketing processes',\n          milestones: ['Marketing strategy', 'Basic analytics', 'Content planning']\n        }, {\n          name: 'Growth',\n          duration: '3-6 months',\n          focus: 'Scale effective channels',\n          milestones: ['Channel optimization', 'Automation', 'Lead scoring']\n        }]\n      }\n    };\n  }\n  generateSummary(scores) {\n    // Generate summary text based on overall score\n    if (!scores || typeof scores.overall !== 'number') {\n      return 'Thank you for completing the assessment.';\n    }\n    if (scores.overall < 30) {\n      return 'Your marketing organization is in the early stages of development. There are significant opportunities to build a more effective marketing function.';\n    } else if (scores.overall < 60) {\n      return 'Your marketing organization has established some foundations but needs further development in key areas to become fully effective.';\n    } else if (scores.overall < 80) {\n      return 'Your marketing organization demonstrates good maturity with specific opportunities for optimization to reach excellence.';\n    } else {\n      return 'Your marketing organization shows high maturity across multiple dimensions. Focus on refinement and innovation to maintain your competitive edge.';\n    }\n  }\n  generateRecommendations(scores, context) {\n    const recommendations = [];\n\n    // Only proceed if we have valid scores\n    if (!scores || !scores.dimensions) return recommendations;\n\n    // Generate recommendations for each dimension with low scores\n    Object.entries(scores.dimensions).forEach(([dimension, data]) => {\n      if (data.score < 50) {\n        switch (dimension) {\n          case 'technology':\n            recommendations.push({\n              dimension: 'technology',\n              title: 'Technology Stack Optimization',\n              description: 'Your marketing technology score indicates room for improvement.',\n              specificAction: 'Conduct a technology audit and identify critical gaps in your marketing stack.'\n            });\n            break;\n          case 'process':\n            recommendations.push({\n              dimension: 'process',\n              title: 'Process Standardization',\n              description: 'Standardizing your marketing processes will improve efficiency and consistency.',\n              specificAction: 'Document your core marketing workflows and identify bottlenecks.'\n            });\n            break;\n          case 'people':\n            recommendations.push({\n              dimension: 'people',\n              title: 'Talent Development',\n              description: 'Investing in your marketing team capabilities will drive better results.',\n              specificAction: 'Assess skill gaps and create a training plan for your marketing team.'\n            });\n            break;\n          case 'strategy':\n            recommendations.push({\n              dimension: 'strategy',\n              title: 'Strategic Planning',\n              description: 'A more robust marketing strategy will align efforts and improve outcomes.',\n              specificAction: 'Develop a comprehensive marketing strategy document with clear KPIs.'\n            });\n            break;\n          default:\n            recommendations.push({\n              dimension: dimension,\n              title: `${this.formatDimension(dimension)} Enhancement`,\n              description: `Your ${this.formatDimension(dimension)} capabilities need strengthening.`,\n              specificAction: `Evaluate your current ${dimension} approach and develop an improvement plan.`\n            });\n        }\n      }\n    });\n\n    // Add general recommendations if needed\n    if (recommendations.length === 0) {\n      recommendations.push({\n        dimension: 'general',\n        title: 'Continuous Improvement',\n        description: 'While your marketing maturity is strong, continuous improvement will maintain your advantage.',\n        specificAction: 'Establish quarterly marketing reviews to identify optimization opportunities.'\n      });\n    }\n    return recommendations;\n  }\n  generateRoadmap(scores) {\n    // Generate a roadmap based on scores\n    const phases = [{\n      name: 'Foundation',\n      duration: '1-3 months',\n      focus: 'Establish core marketing capabilities',\n      milestones: ['Develop marketing strategy', 'Implement basic analytics', 'Standardize content production', 'Set up CRM processes']\n    }, {\n      name: 'Growth',\n      duration: '3-6 months',\n      focus: 'Scale effective channels and processes',\n      milestones: ['Optimize high-performing channels', 'Implement marketing automation', 'Develop lead scoring model', 'Create customer journey maps']\n    }, {\n      name: 'Optimization',\n      duration: '6-12 months',\n      focus: 'Refine performance and integration',\n      milestones: ['Advanced attribution modeling', 'Cross-channel integration', 'Personalization at scale', 'ROI optimization']\n    }];\n    return {\n      phases\n    };\n  }\n  constructor(customScoring) {\n    this.customScoring = customScoring;\n    this.defaultWeights = {\n      technology: 0.3,\n      process: 0.3,\n      people: 0.2,\n      strategy: 0.2\n    };\n    this.weights = (customScoring === null || customScoring === void 0 ? void 0 : customScoring.weights) || this.defaultWeights;\n  }\n  calculate(responses, context) {\n    console.log('Starting score calculation with responses:', Object.keys(responses).length);\n    console.log('Context for calculation:', context);\n    try {\n      var _this$customScoring;\n      // Base scoring logic used by all assessments\n      let scores = this.calculateDimensionScores(responses);\n\n      // Apply custom scoring if provided\n      if ((_this$customScoring = this.customScoring) !== null && _this$customScoring !== void 0 && _this$customScoring.calculate) {\n        try {\n          const customScores = this.customScoring.calculate(scores, responses, context);\n          if (customScores) scores = customScores;\n        } catch (error) {\n          console.error('Error in custom scoring calculation:', error);\n        }\n      }\n\n      // Apply context-based adjustments\n      scores = this.applyContextAdjustments(scores, context);\n\n      // Calculate overall score\n      const overall = this.calculateOverallScore(scores);\n\n      // Generate insights\n      const result = {\n        scores: {\n          overall: overall,\n          categories: scores\n        },\n        insights: this.generateInsights({\n          overall,\n          dimensions: scores\n        }, context),\n        report: this.generateReport({\n          overall,\n          dimensions: scores\n        }, context)\n      };\n      console.log('Final calculation result:', result);\n      return result;\n    } catch (error) {\n      console.error('Error in score calculation:', error);\n\n      // Return a fallback result to prevent UI errors\n      return {\n        scores: {\n          overall: 50,\n          categories: {\n            technology: {\n              score: 50\n            },\n            process: {\n              score: 50\n            },\n            people: {\n              score: 50\n            },\n            strategy: {\n              score: 50\n            }\n          }\n        },\n        insights: [{\n          type: 'warning',\n          title: 'Score Calculation Issue',\n          description: 'There was an issue calculating your detailed scores.'\n        }],\n        report: this.generateDefaultReport()\n      };\n    }\n  }\n  calculateDimensionScores(responses) {\n    // Default implementation for base dimension calculation\n    console.log('Calculating dimension scores with responses:', responses);\n\n    // Extract question responses and organize them by category\n    const categories = {};\n\n    // Initialize default categories with zero scores\n    const defaultCategories = ['technology', 'process', 'people', 'strategy'];\n    defaultCategories.forEach(cat => {\n      categories[cat] = {\n        score: 0,\n        count: 0,\n        responses: []\n      };\n    });\n\n    // Process each response\n    Object.entries(responses).forEach(([questionId, answer]) => {\n      // Skip non-numeric responses or special properties\n      if (typeof answer !== 'number' || questionId === 'selectedServices') return;\n\n      // Determine category from question ID - default to 'technology' if unknown\n      // Format might be: tech_01, people_02, etc.\n      const category = questionId.split('_')[0] || 'technology';\n      const normalizedCategory = this.normalizeCategory(category);\n\n      // If category not initialized, create it\n      if (!categories[normalizedCategory]) {\n        categories[normalizedCategory] = {\n          score: 0,\n          count: 0,\n          responses: []\n        };\n      }\n\n      // Add the score (assuming questions are scored 0-5)\n      categories[normalizedCategory].score += answer;\n      categories[normalizedCategory].count++;\n      categories[normalizedCategory].responses.push({\n        id: questionId,\n        value: answer\n      });\n    });\n\n    // Calculate average scores for each category\n    const dimensionScores = {};\n    Object.entries(categories).forEach(([category, data]) => {\n      dimensionScores[category] = {\n        score: data.count > 0 ? Math.round(data.score / (data.count * 5) * 100) : 0,\n        responses: data.responses\n      };\n    });\n    console.log('Calculated dimension scores:', dimensionScores);\n    return dimensionScores;\n  }\n  calculateOverallScore(dimensionScores) {\n    // Default implementation for overall score calculation\n    console.log('Calculating overall score with dimension scores:', dimensionScores);\n    let weightedSum = 0;\n    let totalWeight = 0;\n\n    // Calculate weighted sum of dimension scores\n    Object.entries(dimensionScores).forEach(([dimension, data]) => {\n      const weight = this.weights[dimension] || 0.25; // Default equal weight if not specified\n      weightedSum += (data.score || 0) * weight;\n      totalWeight += weight;\n    });\n\n    // Calculate overall score (rounded to nearest integer)\n    const overallScore = totalWeight > 0 ? Math.round(weightedSum / totalWeight) : 50;\n    console.log('Calculated overall score:', overallScore);\n    return overallScore;\n  }\n  applyContextAdjustments(scores, context) {\n    // Apply size, industry, or other contextual adjustments\n    console.log('Applying context adjustments with context:', context);\n\n    // If no context, return scores unchanged\n    if (!context) return scores;\n\n    // Example: Adjust for company size\n    if (context.companySize) {\n      // Small companies might get a boost in technology score\n      if (context.companySize === 'small' && scores.technology) {\n        scores.technology.score = Math.min(100, scores.technology.score + 5);\n      }\n    }\n\n    // Example: Adjust for selected services\n    if (context.selectedServices) {\n      const serviceCount = Object.keys(context.selectedServices).length;\n      // More focused companies (fewer services) might score higher in strategy\n      if (serviceCount <= 2 && scores.strategy) {\n        scores.strategy.score = Math.min(100, scores.strategy.score + 5);\n      }\n    }\n    return scores;\n  }\n  generateInsights(scores, context) {\n    // Generate insights based on scores\n    const insights = [];\n\n    // Only proceed if we have valid scores\n    if (!scores) return insights;\n\n    // Generate overall insights\n    if (typeof scores.overall === 'number') {\n      if (scores.overall < 30) {\n        insights.push({\n          type: 'critical',\n          title: 'Significant Improvement Needed',\n          description: 'Your marketing maturity score indicates substantial room for improvement across multiple dimensions.'\n        });\n      } else if (scores.overall < 60) {\n        insights.push({\n          type: 'warning',\n          title: 'Building Foundations',\n          description: 'You have some marketing fundamentals in place, but there are key areas that need strengthening.'\n        });\n      } else if (scores.overall < 80) {\n        insights.push({\n          type: 'positive',\n          title: 'Solid Performance',\n          description: 'Your marketing operations show good maturity with specific opportunities for optimization.'\n        });\n      } else {\n        insights.push({\n          type: 'excellent',\n          title: 'Marketing Excellence',\n          description: 'Your marketing organization demonstrates high levels of maturity and effectiveness.'\n        });\n      }\n    }\n\n    // Generate dimension-specific insights\n    Object.entries(scores.dimensions || {}).forEach(([dimension, data]) => {\n      if (typeof data.score === 'number' && data.score < 50) {\n        insights.push({\n          type: 'opportunity',\n          dimension: dimension,\n          title: `${this.formatDimension(dimension)} Opportunity`,\n          description: `Your ${this.formatDimension(dimension)} score suggests this is a high-priority area for improvement.`\n        });\n      }\n    });\n    return insights;\n  }\n}\nexport default ScoringEngine;","map":{"version":3,"names":["ScoringEngine","normalizeCategory","category","categoryMap","toLowerCase","formatDimension","dimension","dimensionLabels","charAt","toUpperCase","slice","generateReport","scores","context","overallScore","overall","executive","headline","subheadline","narrative","generateSummary","snapshot","generateSnapshot","keyMetrics","roi","value","Math","round","label","interpretation","efficiency","readiness","title","subtitle","dimensions","generateDimensionCards","summary","recommendations","generateRecommendations","nextSteps","booking","buttonText","urgency","message","testimonial","quote","author","role","result","roadmap","generateRoadmap","valuation","generateValuationImpact","error","console","generateDefaultReport","phases","name","duration","focus","milestones","Object","entries","forEach","data","score","push","description","specificAction","length","constructor","customScoring","defaultWeights","technology","process","people","strategy","weights","calculate","responses","log","keys","_this$customScoring","calculateDimensionScores","customScores","applyContextAdjustments","calculateOverallScore","categories","insights","generateInsights","report","type","defaultCategories","cat","count","questionId","answer","split","normalizedCategory","id","dimensionScores","weightedSum","totalWeight","weight","companySize","min","selectedServices","serviceCount"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/engine/ScoringEngine.js"],"sourcesContent":["export class ScoringEngine {\n    // Helper methods for category and dimension handling\n    normalizeCategory(category) {\n        // Map various category names to standard categories\n        const categoryMap = {\n            'tech': 'technology',\n            'technology': 'technology',\n            'tools': 'technology',\n            'process': 'process',\n            'processes': 'process',\n            'workflow': 'process',\n            'people': 'people',\n            'team': 'people',\n            'skills': 'people',\n            'talent': 'people',\n            'strategy': 'strategy',\n            'plan': 'strategy',\n            'planning': 'strategy',\n            'content': 'content',\n            'analytics': 'analytics'\n        };\n        \n        return categoryMap[category.toLowerCase()] || 'technology';\n    }\n    \n    formatDimension(dimension) {\n        // Format dimension names for display\n        const dimensionLabels = {\n            'technology': 'Technology',\n            'process': 'Process',\n            'people': 'People',\n            'strategy': 'Strategy',\n            'content': 'Content',\n            'analytics': 'Analytics'\n        };\n        \n        return dimensionLabels[dimension.toLowerCase()] || dimension.charAt(0).toUpperCase() + dimension.slice(1);\n    }\n    \n    generateReport(scores, context) {\n        // Generate a complete report based on scores and context\n        try {\n            const overallScore = scores.overall || 0;\n            \n            // Executive summary section\n            const executive = {\n                headline: 'Your Assessment Results',\n                subheadline: 'Detailed analysis and recommendations below',\n                narrative: this.generateSummary(scores),\n                snapshot: this.generateSnapshot(scores, context),\n                keyMetrics: {\n                    roi: {\n                        value: `${Math.round(overallScore * 1.5)}%`,\n                        label: 'Potential ROI',\n                        interpretation: overallScore < 40 ? 'Significant room for improvement' : 'Strong foundation for growth'\n                    },\n                    efficiency: {\n                        value: `${Math.round(overallScore * 0.8)}%`,\n                        label: 'Operational Efficiency',\n                        interpretation: 'Based on your process maturity'\n                    },\n                    readiness: {\n                        value: overallScore < 30 ? 'Low' : overallScore < 60 ? 'Medium' : 'High',\n                        label: 'Marketing Readiness',\n                        interpretation: 'Your overall marketing maturity'\n                    }\n                }\n            };\n            \n            // Readiness section\n            const readiness = {\n                title: 'Marketing Readiness Assessment',\n                subtitle: 'How your marketing organization compares across key dimensions',\n                dimensions: this.generateDimensionCards(scores)\n            };\n            \n            // Create full report object\n            return {\n                title: 'Marketing Maturity Assessment',\n                summary: this.generateSummary(scores) || 'Thank you for completing the assessment.',\n                executive: executive,\n                readiness: readiness,\n                recommendations: this.generateRecommendations(scores, context),\n                nextSteps: {\n                    booking: {\n                        headline: 'Ready to Elevate Your Marketing?',\n                        subheadline: 'Schedule a consultation to get personalized insights',\n                        buttonText: 'Book Your Strategy Session'\n                    },\n                    urgency: {\n                        message: 'Limited spots available this month'\n                    },\n                    testimonial: {\n                        quote: 'The assessment identified exactly where we needed to focus. Six months later, our marketing ROI has doubled.',\n                        author: 'Marketing Director',\n                        role: 'SaaS Company',\n                        result: '107% increase in qualified leads'\n                    }\n                },\n                roadmap: this.generateRoadmap(scores),\n                valuation: this.generateValuationImpact(scores, context)\n            };\n        } catch (error) {\n            console.error('Error generating report:', error);\n            return this.generateDefaultReport();\n        }\n    }\n    \n    generateDefaultReport() {\n        // Generate a default report when scoring fails\n        return {\n            title: 'Marketing Maturity Assessment',\n            summary: 'Based on your responses, we have prepared an initial assessment of your marketing maturity.',\n            recommendations: [],\n            nextSteps: {\n                booking: {\n                    headline: 'Get a Complete Assessment',\n                    subheadline: 'Schedule a consultation to get personalized insights',\n                    buttonText: 'Book Your Strategy Session'\n                }\n            },\n            roadmap: {\n                phases: [\n                    {\n                        name: 'Foundation',\n                        duration: '1-3 months',\n                        focus: 'Establish core marketing processes',\n                        milestones: ['Marketing strategy', 'Basic analytics', 'Content planning']\n                    },\n                    {\n                        name: 'Growth',\n                        duration: '3-6 months',\n                        focus: 'Scale effective channels',\n                        milestones: ['Channel optimization', 'Automation', 'Lead scoring']\n                    }\n                ]\n            }\n        };\n    }\n    \n    generateSummary(scores) {\n        // Generate summary text based on overall score\n        if (!scores || typeof scores.overall !== 'number') {\n            return 'Thank you for completing the assessment.';\n        }\n        \n        if (scores.overall < 30) {\n            return 'Your marketing organization is in the early stages of development. There are significant opportunities to build a more effective marketing function.';\n        } else if (scores.overall < 60) {\n            return 'Your marketing organization has established some foundations but needs further development in key areas to become fully effective.';\n        } else if (scores.overall < 80) {\n            return 'Your marketing organization demonstrates good maturity with specific opportunities for optimization to reach excellence.';\n        } else {\n            return 'Your marketing organization shows high maturity across multiple dimensions. Focus on refinement and innovation to maintain your competitive edge.';\n        }\n    }\n    \n    generateRecommendations(scores, context) {\n        const recommendations = [];\n        \n        // Only proceed if we have valid scores\n        if (!scores || !scores.dimensions) return recommendations;\n        \n        // Generate recommendations for each dimension with low scores\n        Object.entries(scores.dimensions).forEach(([dimension, data]) => {\n            if (data.score < 50) {\n                switch (dimension) {\n                    case 'technology':\n                        recommendations.push({\n                            dimension: 'technology',\n                            title: 'Technology Stack Optimization',\n                            description: 'Your marketing technology score indicates room for improvement.',\n                            specificAction: 'Conduct a technology audit and identify critical gaps in your marketing stack.'\n                        });\n                        break;\n                    case 'process':\n                        recommendations.push({\n                            dimension: 'process',\n                            title: 'Process Standardization',\n                            description: 'Standardizing your marketing processes will improve efficiency and consistency.',\n                            specificAction: 'Document your core marketing workflows and identify bottlenecks.'\n                        });\n                        break;\n                    case 'people':\n                        recommendations.push({\n                            dimension: 'people',\n                            title: 'Talent Development',\n                            description: 'Investing in your marketing team capabilities will drive better results.',\n                            specificAction: 'Assess skill gaps and create a training plan for your marketing team.'\n                        });\n                        break;\n                    case 'strategy':\n                        recommendations.push({\n                            dimension: 'strategy',\n                            title: 'Strategic Planning',\n                            description: 'A more robust marketing strategy will align efforts and improve outcomes.',\n                            specificAction: 'Develop a comprehensive marketing strategy document with clear KPIs.'\n                        });\n                        break;\n                    default:\n                        recommendations.push({\n                            dimension: dimension,\n                            title: `${this.formatDimension(dimension)} Enhancement`,\n                            description: `Your ${this.formatDimension(dimension)} capabilities need strengthening.`,\n                            specificAction: `Evaluate your current ${dimension} approach and develop an improvement plan.`\n                        });\n                }\n            }\n        });\n        \n        // Add general recommendations if needed\n        if (recommendations.length === 0) {\n            recommendations.push({\n                dimension: 'general',\n                title: 'Continuous Improvement',\n                description: 'While your marketing maturity is strong, continuous improvement will maintain your advantage.',\n                specificAction: 'Establish quarterly marketing reviews to identify optimization opportunities.'\n            });\n        }\n        \n        return recommendations;\n    }\n    \n    generateRoadmap(scores) {\n        // Generate a roadmap based on scores\n        const phases = [\n            {\n                name: 'Foundation',\n                duration: '1-3 months',\n                focus: 'Establish core marketing capabilities',\n                milestones: [\n                    'Develop marketing strategy',\n                    'Implement basic analytics',\n                    'Standardize content production',\n                    'Set up CRM processes'\n                ]\n            },\n            {\n                name: 'Growth',\n                duration: '3-6 months',\n                focus: 'Scale effective channels and processes',\n                milestones: [\n                    'Optimize high-performing channels',\n                    'Implement marketing automation',\n                    'Develop lead scoring model',\n                    'Create customer journey maps'\n                ]\n            },\n            {\n                name: 'Optimization',\n                duration: '6-12 months',\n                focus: 'Refine performance and integration',\n                milestones: [\n                    'Advanced attribution modeling',\n                    'Cross-channel integration',\n                    'Personalization at scale',\n                    'ROI optimization'\n                ]\n            }\n        ];\n        \n        return { phases };\n    }\n    constructor(customScoring) {\n        this.customScoring = customScoring;\n        this.defaultWeights = {\n            technology: 0.3,\n            process: 0.3,\n            people: 0.2,\n            strategy: 0.2\n        };\n        this.weights = customScoring?.weights || this.defaultWeights;\n    }\n\n    calculate(responses, context) {\n        console.log('Starting score calculation with responses:', Object.keys(responses).length);\n        console.log('Context for calculation:', context);\n        \n        try {\n            // Base scoring logic used by all assessments\n            let scores = this.calculateDimensionScores(responses);\n    \n            // Apply custom scoring if provided\n            if (this.customScoring?.calculate) {\n                try {\n                    const customScores = this.customScoring.calculate(scores, responses, context);\n                    if (customScores) scores = customScores;\n                } catch (error) {\n                    console.error('Error in custom scoring calculation:', error);\n                }\n            }\n    \n            // Apply context-based adjustments\n            scores = this.applyContextAdjustments(scores, context);\n    \n            // Calculate overall score\n            const overall = this.calculateOverallScore(scores);\n            \n            // Generate insights\n            const result = {\n                scores: {\n                    overall: overall,\n                    categories: scores\n                },\n                insights: this.generateInsights({ overall, dimensions: scores }, context),\n                report: this.generateReport({ overall, dimensions: scores }, context)\n            };\n            \n            console.log('Final calculation result:', result);\n            return result;\n        } catch (error) {\n            console.error('Error in score calculation:', error);\n            \n            // Return a fallback result to prevent UI errors\n            return {\n                scores: {\n                    overall: 50,\n                    categories: {\n                        technology: { score: 50 },\n                        process: { score: 50 },\n                        people: { score: 50 },\n                        strategy: { score: 50 }\n                    }\n                },\n                insights: [{\n                    type: 'warning',\n                    title: 'Score Calculation Issue',\n                    description: 'There was an issue calculating your detailed scores.'\n                }],\n                report: this.generateDefaultReport()\n            };\n        }\n    }\n\n    calculateDimensionScores(responses) {\n        // Default implementation for base dimension calculation\n        console.log('Calculating dimension scores with responses:', responses);\n        \n        // Extract question responses and organize them by category\n        const categories = {};\n        \n        // Initialize default categories with zero scores\n        const defaultCategories = ['technology', 'process', 'people', 'strategy'];\n        defaultCategories.forEach(cat => {\n            categories[cat] = { score: 0, count: 0, responses: [] };\n        });\n        \n        // Process each response\n        Object.entries(responses).forEach(([questionId, answer]) => {\n            // Skip non-numeric responses or special properties\n            if (typeof answer !== 'number' || questionId === 'selectedServices') return;\n            \n            // Determine category from question ID - default to 'technology' if unknown\n            // Format might be: tech_01, people_02, etc.\n            const category = questionId.split('_')[0] || 'technology';\n            const normalizedCategory = this.normalizeCategory(category);\n            \n            // If category not initialized, create it\n            if (!categories[normalizedCategory]) {\n                categories[normalizedCategory] = { score: 0, count: 0, responses: [] };\n            }\n            \n            // Add the score (assuming questions are scored 0-5)\n            categories[normalizedCategory].score += answer;\n            categories[normalizedCategory].count++;\n            categories[normalizedCategory].responses.push({ id: questionId, value: answer });\n        });\n        \n        // Calculate average scores for each category\n        const dimensionScores = {};\n        Object.entries(categories).forEach(([category, data]) => {\n            dimensionScores[category] = {\n                score: data.count > 0 ? Math.round((data.score / (data.count * 5)) * 100) : 0,\n                responses: data.responses\n            };\n        });\n        \n        console.log('Calculated dimension scores:', dimensionScores);\n        return dimensionScores;\n    }\n\n    calculateOverallScore(dimensionScores) {\n        // Default implementation for overall score calculation\n        console.log('Calculating overall score with dimension scores:', dimensionScores);\n        \n        let weightedSum = 0;\n        let totalWeight = 0;\n        \n        // Calculate weighted sum of dimension scores\n        Object.entries(dimensionScores).forEach(([dimension, data]) => {\n            const weight = this.weights[dimension] || 0.25; // Default equal weight if not specified\n            weightedSum += (data.score || 0) * weight;\n            totalWeight += weight;\n        });\n        \n        // Calculate overall score (rounded to nearest integer)\n        const overallScore = totalWeight > 0 ? Math.round(weightedSum / totalWeight) : 50;\n        \n        console.log('Calculated overall score:', overallScore);\n        return overallScore;\n    }\n\n    applyContextAdjustments(scores, context) {\n        // Apply size, industry, or other contextual adjustments\n        console.log('Applying context adjustments with context:', context);\n        \n        // If no context, return scores unchanged\n        if (!context) return scores;\n        \n        // Example: Adjust for company size\n        if (context.companySize) {\n            // Small companies might get a boost in technology score\n            if (context.companySize === 'small' && scores.technology) {\n                scores.technology.score = Math.min(100, scores.technology.score + 5);\n            }\n        }\n        \n        // Example: Adjust for selected services\n        if (context.selectedServices) {\n            const serviceCount = Object.keys(context.selectedServices).length;\n            // More focused companies (fewer services) might score higher in strategy\n            if (serviceCount <= 2 && scores.strategy) {\n                scores.strategy.score = Math.min(100, scores.strategy.score + 5);\n            }\n        }\n        \n        return scores;\n    }\n\n    generateInsights(scores, context) {\n        // Generate insights based on scores\n        const insights = [];\n        \n        // Only proceed if we have valid scores\n        if (!scores) return insights;\n        \n        // Generate overall insights\n        if (typeof scores.overall === 'number') {\n            if (scores.overall < 30) {\n                insights.push({\n                    type: 'critical',\n                    title: 'Significant Improvement Needed',\n                    description: 'Your marketing maturity score indicates substantial room for improvement across multiple dimensions.'\n                });\n            } else if (scores.overall < 60) {\n                insights.push({\n                    type: 'warning',\n                    title: 'Building Foundations',\n                    description: 'You have some marketing fundamentals in place, but there are key areas that need strengthening.'\n                });\n            } else if (scores.overall < 80) {\n                insights.push({\n                    type: 'positive',\n                    title: 'Solid Performance',\n                    description: 'Your marketing operations show good maturity with specific opportunities for optimization.'\n                });\n            } else {\n                insights.push({\n                    type: 'excellent',\n                    title: 'Marketing Excellence',\n                    description: 'Your marketing organization demonstrates high levels of maturity and effectiveness.'\n                });\n            }\n        }\n        \n        // Generate dimension-specific insights\n        Object.entries(scores.dimensions || {}).forEach(([dimension, data]) => {\n            if (typeof data.score === 'number' && data.score < 50) {\n                insights.push({\n                    type: 'opportunity',\n                    dimension: dimension,\n                    title: `${this.formatDimension(dimension)} Opportunity`,\n                    description: `Your ${this.formatDimension(dimension)} score suggests this is a high-priority area for improvement.`\n                });\n            }\n        });\n        \n        return insights;\n    }\n}\n\nexport default ScoringEngine;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}