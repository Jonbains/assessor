{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { AssessmentEngine } from '../engine/AssessmentEngine';\nexport const useAssessment = assessmentType => {\n  _s();\n  const [engine, setEngine] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentStage, setCurrentStage] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [assessmentData, setAssessmentData] = useState({\n    qualifying: {},\n    services: [],\n    responses: {}\n  });\n  useEffect(() => {\n    const initializeAssessment = async () => {\n      try {\n        setLoading(true);\n        const assessmentEngine = new AssessmentEngine(assessmentType);\n        await assessmentEngine.initialize();\n        setEngine(assessmentEngine);\n        setCurrentStage(assessmentEngine.flow.getCurrentStage());\n        updateProgress(assessmentEngine);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (assessmentType) {\n      initializeAssessment();\n    }\n  }, [assessmentType]);\n  const updateProgress = useCallback(assessmentEngine => {\n    const progressData = assessmentEngine.getProgress();\n    setProgress(progressData.percentage);\n  }, []);\n  const nextStage = useCallback(async () => {\n    if (!engine) return;\n    try {\n      const nextStage = await engine.nextStage();\n      setCurrentStage(nextStage);\n      updateProgress(engine);\n    } catch (err) {\n      setError(err.message);\n    }\n  }, [engine, updateProgress]);\n  const previousStage = useCallback(async () => {\n    if (!engine) return;\n    try {\n      const prevStage = await engine.previousStage();\n      setCurrentStage(prevStage);\n      updateProgress(engine);\n    } catch (err) {\n      setError(err.message);\n    }\n  }, [engine, updateProgress]);\n  const saveResponse = useCallback((questionId, value) => {\n    if (!engine) return;\n    engine.saveResponse(questionId, value);\n  }, [engine]);\n  const getResponse = useCallback(questionId => {\n    if (!engine) return null;\n    return engine.getResponse(questionId);\n  }, [engine]);\n  const setContext = useCallback((key, value) => {\n    if (!engine) return;\n    engine.setContext(key, value);\n  }, [engine]);\n  const getContext = useCallback(key => {\n    if (!engine) return null;\n    return engine.getContext(key);\n  }, [engine]);\n  const updateAssessmentData = useCallback(newData => {\n    setAssessmentData(prevData => ({\n      ...prevData,\n      ...newData\n    }));\n  }, []);\n  const saveProgress = useCallback(async stage => {\n    // This would typically save to localStorage or a backend\n    console.log(`Saving progress for stage: ${stage}`, assessmentData);\n    return Promise.resolve(true);\n  }, [assessmentData]);\n  const calculateResults = useCallback(() => {\n    if (!engine) return null;\n    return engine.calculateResults();\n  }, [engine]);\n  const getAssessmentConfig = useCallback(async type => {\n    try {\n      // Dynamically import the assessment configuration file\n      const config = await import(`../../assessments/${type}/config.json`);\n      return config;\n    } catch (err) {\n      console.error('Error loading assessment config:', err);\n      throw new Error(`Failed to load configuration for assessment type: ${type}`);\n    }\n  }, []);\n  const reset = useCallback(() => {\n    if (!engine) return;\n    engine.reset();\n    setCurrentStage(engine.flow.getCurrentStage());\n    setProgress(0);\n  }, [engine]);\n  return {\n    loading,\n    error,\n    currentStage,\n    progress,\n    nextStage,\n    previousStage,\n    saveResponse,\n    getResponse,\n    setContext,\n    getContext,\n    calculateResults,\n    reset,\n    getAssessmentConfig,\n    assessmentData,\n    updateAssessmentData,\n    saveProgress\n  };\n};\n_s(useAssessment, \"sUY1ZsUztLAdZPA3WMaMNicP+N0=\");\nexport default useAssessment;","map":{"version":3,"names":["useState","useEffect","useCallback","AssessmentEngine","useAssessment","assessmentType","_s","engine","setEngine","loading","setLoading","error","setError","currentStage","setCurrentStage","progress","setProgress","assessmentData","setAssessmentData","qualifying","services","responses","initializeAssessment","assessmentEngine","initialize","flow","getCurrentStage","updateProgress","err","message","progressData","getProgress","percentage","nextStage","previousStage","prevStage","saveResponse","questionId","value","getResponse","setContext","key","getContext","updateAssessmentData","newData","prevData","saveProgress","stage","console","log","Promise","resolve","calculateResults","getAssessmentConfig","type","config","Error","reset"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/hooks/useAssessment.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { AssessmentEngine } from '../engine/AssessmentEngine';\n\nexport const useAssessment = (assessmentType) => {\n    const [engine, setEngine] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [currentStage, setCurrentStage] = useState(null);\n    const [progress, setProgress] = useState(0);\n    const [assessmentData, setAssessmentData] = useState({\n        qualifying: {},\n        services: [],\n        responses: {}\n    });\n\n    useEffect(() => {\n        const initializeAssessment = async () => {\n            try {\n                setLoading(true);\n                const assessmentEngine = new AssessmentEngine(assessmentType);\n                await assessmentEngine.initialize();\n                setEngine(assessmentEngine);\n                setCurrentStage(assessmentEngine.flow.getCurrentStage());\n                updateProgress(assessmentEngine);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (assessmentType) {\n            initializeAssessment();\n        }\n    }, [assessmentType]);\n\n    const updateProgress = useCallback((assessmentEngine) => {\n        const progressData = assessmentEngine.getProgress();\n        setProgress(progressData.percentage);\n    }, []);\n\n    const nextStage = useCallback(async () => {\n        if (!engine) return;\n        \n        try {\n            const nextStage = await engine.nextStage();\n            setCurrentStage(nextStage);\n            updateProgress(engine);\n        } catch (err) {\n            setError(err.message);\n        }\n    }, [engine, updateProgress]);\n\n    const previousStage = useCallback(async () => {\n        if (!engine) return;\n        \n        try {\n            const prevStage = await engine.previousStage();\n            setCurrentStage(prevStage);\n            updateProgress(engine);\n        } catch (err) {\n            setError(err.message);\n        }\n    }, [engine, updateProgress]);\n\n    const saveResponse = useCallback((questionId, value) => {\n        if (!engine) return;\n        engine.saveResponse(questionId, value);\n    }, [engine]);\n\n    const getResponse = useCallback((questionId) => {\n        if (!engine) return null;\n        return engine.getResponse(questionId);\n    }, [engine]);\n\n    const setContext = useCallback((key, value) => {\n        if (!engine) return;\n        engine.setContext(key, value);\n    }, [engine]);\n\n    const getContext = useCallback((key) => {\n        if (!engine) return null;\n        return engine.getContext(key);\n    }, [engine]);\n    \n    const updateAssessmentData = useCallback((newData) => {\n        setAssessmentData(prevData => ({\n            ...prevData,\n            ...newData\n        }));\n    }, []);\n    \n    const saveProgress = useCallback(async (stage) => {\n        // This would typically save to localStorage or a backend\n        console.log(`Saving progress for stage: ${stage}`, assessmentData);\n        return Promise.resolve(true);\n    }, [assessmentData]);\n\n    const calculateResults = useCallback(() => {\n        if (!engine) return null;\n        return engine.calculateResults();\n    }, [engine]);\n\n    const getAssessmentConfig = useCallback(async (type) => {\n        try {\n            // Dynamically import the assessment configuration file\n            const config = await import(`../../assessments/${type}/config.json`);\n            return config;\n        } catch (err) {\n            console.error('Error loading assessment config:', err);\n            throw new Error(`Failed to load configuration for assessment type: ${type}`);\n        }\n    }, []);\n\n    const reset = useCallback(() => {\n        if (!engine) return;\n        engine.reset();\n        setCurrentStage(engine.flow.getCurrentStage());\n        setProgress(0);\n    }, [engine]);\n\n    return {\n        loading,\n        error,\n        currentStage,\n        progress,\n        nextStage,\n        previousStage,\n        saveResponse,\n        getResponse,\n        setContext,\n        getContext,\n        calculateResults,\n        reset,\n        getAssessmentConfig,\n        assessmentData,\n        updateAssessmentData,\n        saveProgress\n    };\n};\n\nexport default useAssessment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}