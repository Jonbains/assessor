{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Documents/GitHub/assessor/src/assessments/agency-vulnerability/ToggleableResultsView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from '../../core/styles/components.module.css';\nimport AgencyResultsView from './ResultsView';\nimport EnhancedAgencyResultsView from './EnhancedResultsView';\n\n/**\n * Toggle component that allows switching between classic and enhanced results views\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleableResultsView = ({\n  results\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState('enhanced');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.viewToggle,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.toggleButton} ${viewMode === 'classic' ? styles.activeToggle : ''}`,\n        onClick: () => setViewMode('classic'),\n        children: \"Classic Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.toggleButton} ${viewMode === 'enhanced' ? styles.activeToggle : ''}`,\n        onClick: () => setViewMode('enhanced'),\n        children: \"Enhanced Visual Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), viewMode === 'classic' ? /*#__PURE__*/_jsxDEV(AgencyResultsView, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EnhancedAgencyResultsView, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleableResultsView, \"vInFLxv7WMz4ldA0mp8v7g3TKaY=\");\n_c = ToggleableResultsView;\nexport default ToggleableResultsView;\nvar _c;\n$RefreshReg$(_c, \"ToggleableResultsView\");","map":{"version":3,"names":["React","useState","styles","AgencyResultsView","EnhancedAgencyResultsView","jsxDEV","_jsxDEV","ToggleableResultsView","results","_s","viewMode","setViewMode","children","className","viewToggle","toggleButton","activeToggle","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jon/Documents/GitHub/assessor/src/assessments/agency-vulnerability/ToggleableResultsView.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from '../../core/styles/components.module.css';\nimport AgencyResultsView from './ResultsView';\nimport EnhancedAgencyResultsView from './EnhancedResultsView';\n\n/**\n * Toggle component that allows switching between classic and enhanced results views\n */\nconst ToggleableResultsView = ({ results }) => {\n  const [viewMode, setViewMode] = useState('enhanced');\n  \n  return (\n    <div>\n      <div className={styles.viewToggle}>\n        <button \n          className={`${styles.toggleButton} ${viewMode === 'classic' ? styles.activeToggle : ''}`}\n          onClick={() => setViewMode('classic')}\n        >\n          Classic Report\n        </button>\n        <button \n          className={`${styles.toggleButton} ${viewMode === 'enhanced' ? styles.activeToggle : ''}`}\n          onClick={() => setViewMode('enhanced')}\n        >\n          Enhanced Visual Report\n        </button>\n      </div>\n      \n      {viewMode === 'classic' ? (\n        <AgencyResultsView results={results} />\n      ) : (\n        <EnhancedAgencyResultsView results={results} />\n      )}\n    </div>\n  );\n};\n\nexport default ToggleableResultsView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,yCAAyC;AAC5D,OAAOC,iBAAiB,MAAM,eAAe;AAC7C,OAAOC,yBAAyB,MAAM,uBAAuB;;AAE7D;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC;EAEpD,oBACEK,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAKO,SAAS,EAAEX,MAAM,CAACY,UAAW;MAAAF,QAAA,gBAChCN,OAAA;QACEO,SAAS,EAAE,GAAGX,MAAM,CAACa,YAAY,IAAIL,QAAQ,KAAK,SAAS,GAAGR,MAAM,CAACc,YAAY,GAAG,EAAE,EAAG;QACzFC,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAAC,SAAS,CAAE;QAAAC,QAAA,EACvC;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTf,OAAA;QACEO,SAAS,EAAE,GAAGX,MAAM,CAACa,YAAY,IAAIL,QAAQ,KAAK,UAAU,GAAGR,MAAM,CAACc,YAAY,GAAG,EAAE,EAAG;QAC1FC,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAAC,UAAU,CAAE;QAAAC,QAAA,EACxC;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELX,QAAQ,KAAK,SAAS,gBACrBJ,OAAA,CAACH,iBAAiB;MAACK,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEvCf,OAAA,CAACF,yBAAyB;MAACI,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CA3BIF,qBAAqB;AAAAe,EAAA,GAArBf,qBAAqB;AA6B3B,eAAeA,qBAAqB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}