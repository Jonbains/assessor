{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { AssessmentEngine } from '../engine/AssessmentEngine';\nexport const useAssessment = assessmentType => {\n  _s();\n  const [engine, setEngine] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentStage, setCurrentStage] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  // Initialize assessment data from localStorage if available\n  const [assessmentData, setAssessmentData] = useState(() => {\n    if (typeof window !== 'undefined') {\n      const savedData = localStorage.getItem('assessmentData');\n      if (savedData) {\n        try {\n          const parsedData = JSON.parse(savedData);\n          console.log('Loaded assessment data from localStorage:', parsedData);\n          return parsedData;\n        } catch (e) {\n          console.error('Error parsing saved assessment data:', e);\n        }\n      }\n    }\n    return {\n      qualifying: {},\n      services: [],\n      responses: {}\n    };\n  });\n  useEffect(() => {\n    const initializeAssessment = async () => {\n      try {\n        setLoading(true);\n        const assessmentEngine = new AssessmentEngine(assessmentType);\n        await assessmentEngine.initialize();\n        setEngine(assessmentEngine);\n        setCurrentStage(assessmentEngine.flow.getCurrentStage());\n        updateProgress(assessmentEngine);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (assessmentType) {\n      initializeAssessment();\n    }\n  }, [assessmentType]);\n  const updateProgress = useCallback(assessmentEngine => {\n    const progressData = assessmentEngine.getProgress();\n    setProgress(progressData.percentage);\n  }, []);\n  const nextStage = useCallback(async () => {\n    if (!engine) return;\n    try {\n      const nextStage = await engine.nextStage();\n      setCurrentStage(nextStage);\n      updateProgress(engine);\n    } catch (err) {\n      setError(err.message);\n    }\n  }, [engine, updateProgress]);\n  const previousStage = useCallback(async () => {\n    if (!engine) return;\n    try {\n      const prevStage = await engine.previousStage();\n      setCurrentStage(prevStage);\n      updateProgress(engine);\n    } catch (err) {\n      setError(err.message);\n    }\n  }, [engine, updateProgress]);\n  const saveResponse = useCallback((questionId, value) => {\n    if (!engine) return;\n    engine.saveResponse(questionId, value);\n  }, [engine]);\n  const getResponse = useCallback(questionId => {\n    if (!engine) return null;\n    return engine.getResponse(questionId);\n  }, [engine]);\n  const setContext = useCallback((key, value) => {\n    if (!engine) return;\n    engine.setContext(key, value);\n  }, [engine]);\n  const getContext = useCallback(key => {\n    if (!engine) return null;\n    return engine.getContext(key);\n  }, [engine]);\n  const updateAssessmentData = useCallback(newData => {\n    // Update state with new data\n    setAssessmentData(prevData => {\n      const updatedData = {\n        ...prevData,\n        ...newData\n      };\n\n      // Immediately persist to localStorage for reliability\n      try {\n        console.log('Immediately persisting assessment data:', updatedData);\n        localStorage.setItem('assessmentData', JSON.stringify(updatedData));\n      } catch (error) {\n        console.error('Error immediately persisting assessment data:', error);\n      }\n      return updatedData;\n    });\n  }, []);\n  const saveProgress = useCallback(async stage => {\n    try {\n      // Save to localStorage\n      localStorage.setItem('assessmentData', JSON.stringify(assessmentData));\n      localStorage.setItem('assessmentStage', stage);\n      console.log(`Saving progress for stage: ${stage}`, assessmentData);\n      return true;\n    } catch (error) {\n      console.error('Error saving assessment data:', error);\n      return false;\n    }\n  }, [assessmentData]);\n  const calculateResults = useCallback(() => {\n    if (!engine) return null;\n    return engine.calculateResults();\n  }, [engine]);\n  const getAssessmentConfig = useCallback(async type => {\n    try {\n      // Dynamically import the assessment configuration file\n      const config = await import(`../../assessments/${type}/config.json`);\n      return config;\n    } catch (err) {\n      console.error('Error loading assessment config:', err);\n      throw new Error(`Failed to load configuration for assessment type: ${type}`);\n    }\n  }, []);\n  const reset = useCallback(() => {\n    if (!engine) return;\n    engine.reset();\n    setCurrentStage(engine.flow.getCurrentStage());\n    setProgress(0);\n  }, [engine]);\n  return {\n    loading,\n    error,\n    currentStage,\n    progress,\n    nextStage,\n    previousStage,\n    saveResponse,\n    getResponse,\n    setContext,\n    getContext,\n    calculateResults,\n    reset,\n    getAssessmentConfig,\n    assessmentData,\n    updateAssessmentData,\n    saveProgress\n  };\n};\n_s(useAssessment, \"EcyJJI7vcj1qFLrbPBc8TQJFZ20=\");\nexport default useAssessment;","map":{"version":3,"names":["useState","useEffect","useCallback","AssessmentEngine","useAssessment","assessmentType","_s","engine","setEngine","loading","setLoading","error","setError","currentStage","setCurrentStage","progress","setProgress","assessmentData","setAssessmentData","window","savedData","localStorage","getItem","parsedData","JSON","parse","console","log","e","qualifying","services","responses","initializeAssessment","assessmentEngine","initialize","flow","getCurrentStage","updateProgress","err","message","progressData","getProgress","percentage","nextStage","previousStage","prevStage","saveResponse","questionId","value","getResponse","setContext","key","getContext","updateAssessmentData","newData","prevData","updatedData","setItem","stringify","saveProgress","stage","calculateResults","getAssessmentConfig","type","config","Error","reset"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/hooks/useAssessment.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { AssessmentEngine } from '../engine/AssessmentEngine';\n\nexport const useAssessment = (assessmentType) => {\n    const [engine, setEngine] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [currentStage, setCurrentStage] = useState(null);\n    const [progress, setProgress] = useState(0);\n    \n    // Initialize assessment data from localStorage if available\n    const [assessmentData, setAssessmentData] = useState(() => {\n        if (typeof window !== 'undefined') {\n            const savedData = localStorage.getItem('assessmentData');\n            if (savedData) {\n                try {\n                    const parsedData = JSON.parse(savedData);\n                    console.log('Loaded assessment data from localStorage:', parsedData);\n                    return parsedData;\n                } catch (e) {\n                    console.error('Error parsing saved assessment data:', e);\n                }\n            }\n        }\n        return {\n            qualifying: {},\n            services: [],\n            responses: {}\n        };\n    });\n\n    useEffect(() => {\n        const initializeAssessment = async () => {\n            try {\n                setLoading(true);\n                const assessmentEngine = new AssessmentEngine(assessmentType);\n                await assessmentEngine.initialize();\n                setEngine(assessmentEngine);\n                setCurrentStage(assessmentEngine.flow.getCurrentStage());\n                updateProgress(assessmentEngine);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (assessmentType) {\n            initializeAssessment();\n        }\n    }, [assessmentType]);\n\n    const updateProgress = useCallback((assessmentEngine) => {\n        const progressData = assessmentEngine.getProgress();\n        setProgress(progressData.percentage);\n    }, []);\n\n    const nextStage = useCallback(async () => {\n        if (!engine) return;\n        \n        try {\n            const nextStage = await engine.nextStage();\n            setCurrentStage(nextStage);\n            updateProgress(engine);\n        } catch (err) {\n            setError(err.message);\n        }\n    }, [engine, updateProgress]);\n\n    const previousStage = useCallback(async () => {\n        if (!engine) return;\n        \n        try {\n            const prevStage = await engine.previousStage();\n            setCurrentStage(prevStage);\n            updateProgress(engine);\n        } catch (err) {\n            setError(err.message);\n        }\n    }, [engine, updateProgress]);\n\n    const saveResponse = useCallback((questionId, value) => {\n        if (!engine) return;\n        engine.saveResponse(questionId, value);\n    }, [engine]);\n\n    const getResponse = useCallback((questionId) => {\n        if (!engine) return null;\n        return engine.getResponse(questionId);\n    }, [engine]);\n\n    const setContext = useCallback((key, value) => {\n        if (!engine) return;\n        engine.setContext(key, value);\n    }, [engine]);\n\n    const getContext = useCallback((key) => {\n        if (!engine) return null;\n        return engine.getContext(key);\n    }, [engine]);\n    \n    const updateAssessmentData = useCallback((newData) => {\n        // Update state with new data\n        setAssessmentData(prevData => {\n            const updatedData = {\n                ...prevData,\n                ...newData\n            };\n            \n            // Immediately persist to localStorage for reliability\n            try {\n                console.log('Immediately persisting assessment data:', updatedData);\n                localStorage.setItem('assessmentData', JSON.stringify(updatedData));\n            } catch (error) {\n                console.error('Error immediately persisting assessment data:', error);\n            }\n            \n            return updatedData;\n        });\n    }, []);\n    \n    const saveProgress = useCallback(async (stage) => {\n        try {\n            // Save to localStorage\n            localStorage.setItem('assessmentData', JSON.stringify(assessmentData));\n            localStorage.setItem('assessmentStage', stage);\n            console.log(`Saving progress for stage: ${stage}`, assessmentData);\n            return true;\n        } catch (error) {\n            console.error('Error saving assessment data:', error);\n            return false;\n        }\n    }, [assessmentData]);\n\n    const calculateResults = useCallback(() => {\n        if (!engine) return null;\n        return engine.calculateResults();\n    }, [engine]);\n\n    const getAssessmentConfig = useCallback(async (type) => {\n        try {\n            // Dynamically import the assessment configuration file\n            const config = await import(`../../assessments/${type}/config.json`);\n            return config;\n        } catch (err) {\n            console.error('Error loading assessment config:', err);\n            throw new Error(`Failed to load configuration for assessment type: ${type}`);\n        }\n    }, []);\n\n    const reset = useCallback(() => {\n        if (!engine) return;\n        engine.reset();\n        setCurrentStage(engine.flow.getCurrentStage());\n        setProgress(0);\n    }, [engine]);\n\n    return {\n        loading,\n        error,\n        currentStage,\n        progress,\n        nextStage,\n        previousStage,\n        saveResponse,\n        getResponse,\n        setContext,\n        getContext,\n        calculateResults,\n        reset,\n        getAssessmentConfig,\n        assessmentData,\n        updateAssessmentData,\n        saveProgress\n    };\n};\n\nexport default useAssessment;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,gBAAgB,QAAQ,4BAA4B;AAE7D,OAAO,MAAMC,aAAa,GAAIC,cAAc,IAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;;EAE3C;EACA,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,MAAM;IACvD,IAAI,OAAOmB,MAAM,KAAK,WAAW,EAAE;MAC/B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;MACxD,IAAIF,SAAS,EAAE;QACX,IAAI;UACA,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;UACxCM,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEJ,UAAU,CAAC;UACpE,OAAOA,UAAU;QACrB,CAAC,CAAC,OAAOK,CAAC,EAAE;UACRF,OAAO,CAACf,KAAK,CAAC,sCAAsC,EAAEiB,CAAC,CAAC;QAC5D;MACJ;IACJ;IACA,OAAO;MACHC,UAAU,EAAE,CAAC,CAAC;MACdC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,CAAC;IAChB,CAAC;EACL,CAAC,CAAC;EAEF9B,SAAS,CAAC,MAAM;IACZ,MAAM+B,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACAtB,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMuB,gBAAgB,GAAG,IAAI9B,gBAAgB,CAACE,cAAc,CAAC;QAC7D,MAAM4B,gBAAgB,CAACC,UAAU,CAAC,CAAC;QACnC1B,SAAS,CAACyB,gBAAgB,CAAC;QAC3BnB,eAAe,CAACmB,gBAAgB,CAACE,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;QACxDC,cAAc,CAACJ,gBAAgB,CAAC;MACpC,CAAC,CAAC,OAAOK,GAAG,EAAE;QACV1B,QAAQ,CAAC0B,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SAAS;QACN7B,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAED,IAAIL,cAAc,EAAE;MAChB2B,oBAAoB,CAAC,CAAC;IAC1B;EACJ,CAAC,EAAE,CAAC3B,cAAc,CAAC,CAAC;EAEpB,MAAMgC,cAAc,GAAGnC,WAAW,CAAE+B,gBAAgB,IAAK;IACrD,MAAMO,YAAY,GAAGP,gBAAgB,CAACQ,WAAW,CAAC,CAAC;IACnDzB,WAAW,CAACwB,YAAY,CAACE,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAGzC,WAAW,CAAC,YAAY;IACtC,IAAI,CAACK,MAAM,EAAE;IAEb,IAAI;MACA,MAAMoC,SAAS,GAAG,MAAMpC,MAAM,CAACoC,SAAS,CAAC,CAAC;MAC1C7B,eAAe,CAAC6B,SAAS,CAAC;MAC1BN,cAAc,CAAC9B,MAAM,CAAC;IAC1B,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACV1B,QAAQ,CAAC0B,GAAG,CAACC,OAAO,CAAC;IACzB;EACJ,CAAC,EAAE,CAAChC,MAAM,EAAE8B,cAAc,CAAC,CAAC;EAE5B,MAAMO,aAAa,GAAG1C,WAAW,CAAC,YAAY;IAC1C,IAAI,CAACK,MAAM,EAAE;IAEb,IAAI;MACA,MAAMsC,SAAS,GAAG,MAAMtC,MAAM,CAACqC,aAAa,CAAC,CAAC;MAC9C9B,eAAe,CAAC+B,SAAS,CAAC;MAC1BR,cAAc,CAAC9B,MAAM,CAAC;IAC1B,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACV1B,QAAQ,CAAC0B,GAAG,CAACC,OAAO,CAAC;IACzB;EACJ,CAAC,EAAE,CAAChC,MAAM,EAAE8B,cAAc,CAAC,CAAC;EAE5B,MAAMS,YAAY,GAAG5C,WAAW,CAAC,CAAC6C,UAAU,EAAEC,KAAK,KAAK;IACpD,IAAI,CAACzC,MAAM,EAAE;IACbA,MAAM,CAACuC,YAAY,CAACC,UAAU,EAAEC,KAAK,CAAC;EAC1C,CAAC,EAAE,CAACzC,MAAM,CAAC,CAAC;EAEZ,MAAM0C,WAAW,GAAG/C,WAAW,CAAE6C,UAAU,IAAK;IAC5C,IAAI,CAACxC,MAAM,EAAE,OAAO,IAAI;IACxB,OAAOA,MAAM,CAAC0C,WAAW,CAACF,UAAU,CAAC;EACzC,CAAC,EAAE,CAACxC,MAAM,CAAC,CAAC;EAEZ,MAAM2C,UAAU,GAAGhD,WAAW,CAAC,CAACiD,GAAG,EAAEH,KAAK,KAAK;IAC3C,IAAI,CAACzC,MAAM,EAAE;IACbA,MAAM,CAAC2C,UAAU,CAACC,GAAG,EAAEH,KAAK,CAAC;EACjC,CAAC,EAAE,CAACzC,MAAM,CAAC,CAAC;EAEZ,MAAM6C,UAAU,GAAGlD,WAAW,CAAEiD,GAAG,IAAK;IACpC,IAAI,CAAC5C,MAAM,EAAE,OAAO,IAAI;IACxB,OAAOA,MAAM,CAAC6C,UAAU,CAACD,GAAG,CAAC;EACjC,CAAC,EAAE,CAAC5C,MAAM,CAAC,CAAC;EAEZ,MAAM8C,oBAAoB,GAAGnD,WAAW,CAAEoD,OAAO,IAAK;IAClD;IACApC,iBAAiB,CAACqC,QAAQ,IAAI;MAC1B,MAAMC,WAAW,GAAG;QAChB,GAAGD,QAAQ;QACX,GAAGD;MACP,CAAC;;MAED;MACA,IAAI;QACA5B,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE6B,WAAW,CAAC;QACnEnC,YAAY,CAACoC,OAAO,CAAC,gBAAgB,EAAEjC,IAAI,CAACkC,SAAS,CAACF,WAAW,CAAC,CAAC;MACvE,CAAC,CAAC,OAAO7C,KAAK,EAAE;QACZe,OAAO,CAACf,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACzE;MAEA,OAAO6C,WAAW;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGzD,WAAW,CAAC,MAAO0D,KAAK,IAAK;IAC9C,IAAI;MACA;MACAvC,YAAY,CAACoC,OAAO,CAAC,gBAAgB,EAAEjC,IAAI,CAACkC,SAAS,CAACzC,cAAc,CAAC,CAAC;MACtEI,YAAY,CAACoC,OAAO,CAAC,iBAAiB,EAAEG,KAAK,CAAC;MAC9ClC,OAAO,CAACC,GAAG,CAAC,8BAA8BiC,KAAK,EAAE,EAAE3C,cAAc,CAAC;MAClE,OAAO,IAAI;IACf,CAAC,CAAC,OAAON,KAAK,EAAE;MACZe,OAAO,CAACf,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAO,KAAK;IAChB;EACJ,CAAC,EAAE,CAACM,cAAc,CAAC,CAAC;EAEpB,MAAM4C,gBAAgB,GAAG3D,WAAW,CAAC,MAAM;IACvC,IAAI,CAACK,MAAM,EAAE,OAAO,IAAI;IACxB,OAAOA,MAAM,CAACsD,gBAAgB,CAAC,CAAC;EACpC,CAAC,EAAE,CAACtD,MAAM,CAAC,CAAC;EAEZ,MAAMuD,mBAAmB,GAAG5D,WAAW,CAAC,MAAO6D,IAAI,IAAK;IACpD,IAAI;MACA;MACA,MAAMC,MAAM,GAAG,MAAM,MAAM,CAAC,qBAAqBD,IAAI,cAAc,CAAC;MACpE,OAAOC,MAAM;IACjB,CAAC,CAAC,OAAO1B,GAAG,EAAE;MACVZ,OAAO,CAACf,KAAK,CAAC,kCAAkC,EAAE2B,GAAG,CAAC;MACtD,MAAM,IAAI2B,KAAK,CAAC,qDAAqDF,IAAI,EAAE,CAAC;IAChF;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAGhE,WAAW,CAAC,MAAM;IAC5B,IAAI,CAACK,MAAM,EAAE;IACbA,MAAM,CAAC2D,KAAK,CAAC,CAAC;IACdpD,eAAe,CAACP,MAAM,CAAC4B,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;IAC9CpB,WAAW,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZ,OAAO;IACHE,OAAO;IACPE,KAAK;IACLE,YAAY;IACZE,QAAQ;IACR4B,SAAS;IACTC,aAAa;IACbE,YAAY;IACZG,WAAW;IACXC,UAAU;IACVE,UAAU;IACVS,gBAAgB;IAChBK,KAAK;IACLJ,mBAAmB;IACnB7C,cAAc;IACdoC,oBAAoB;IACpBM;EACJ,CAAC;AACL,CAAC;AAACrD,EAAA,CA5KWF,aAAa;AA8K1B,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}