{"ast":null,"code":"var _jsxFileName = \"/Users/jon/Documents/GitHub/assessor/src/core/components/ServiceSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styles from './ServiceSelector.module.css';\nimport { useAssessment } from '../hooks/useAssessment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceSelector = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    assessmentData,\n    updateAssessmentData,\n    saveProgress\n  } = useAssessment(type);\n  const [services, setServices] = useState([]);\n  const [selectedServices, setSelectedServices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [loadingRetries, setLoadingRetries] = useState(0);\n\n  // Initialize component from localStorage directly for reliability\n  useEffect(() => {\n    try {\n      // Always check localStorage directly first\n      const savedDataString = localStorage.getItem('assessmentData');\n      if (savedDataString) {\n        const savedData = JSON.parse(savedDataString);\n        console.log('DIRECT LOCALSTORAGE READ:', savedData);\n\n        // If we have qualifying data in localStorage but not in assessmentData, it means \n        // the hook's state hasn't updated yet, so we'll manually update it\n        if (savedData.qualifying && Object.keys(savedData.qualifying).length > 0 && (!assessmentData.qualifying || Object.keys(assessmentData.qualifying).length === 0)) {\n          console.log('Manually updating assessment data from localStorage');\n          updateAssessmentData(savedData);\n        }\n\n        // Initialize selected services from saved data\n        if (savedData.services && savedData.services.length > 0) {\n          const initialSelections = {};\n          savedData.services.forEach(serviceId => {\n            initialSelections[serviceId] = 1; // Set to 1 to indicate selected\n          });\n          setSelectedServices(initialSelections);\n        }\n      }\n    } catch (error) {\n      console.error('Error reading from localStorage:', error);\n    }\n\n    // Check if qualifying data exists in localStorage or assessmentData\n    checkQualifyingData();\n  }, []);\n\n  // Function to check if qualifying data exists and redirect if needed\n  const checkQualifyingData = () => {\n    console.log('Checking qualifying data, assessment type:', type);\n    console.log('Current assessment data:', assessmentData);\n    let hasQualifyingData = false;\n\n    // Check assessment data from hook\n    if (assessmentData !== null && assessmentData !== void 0 && assessmentData.qualifying && Object.keys(assessmentData.qualifying).length > 0) {\n      hasQualifyingData = true;\n    }\n\n    // If not in hook state, check localStorage directly\n    if (!hasQualifyingData) {\n      try {\n        const savedDataString = localStorage.getItem('assessmentData');\n        if (savedDataString) {\n          const savedData = JSON.parse(savedDataString);\n          if (savedData.qualifying && Object.keys(savedData.qualifying).length > 0) {\n            console.log('Found qualifying data in localStorage');\n            hasQualifyingData = true;\n            // Update assessment data\n            updateAssessmentData(savedData);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking localStorage for qualifying data:', error);\n      }\n    }\n\n    // If still no qualifying data, redirect to qualifying questions\n    if (!hasQualifyingData) {\n      console.log('No qualifying data found, redirecting to qualifying questions');\n      navigate(`/assessment/${type}/qualifying`, {\n        replace: true\n      });\n      return false;\n    }\n\n    // If we have qualifying data, load services\n    loadServices();\n    return true;\n  };\n  const loadServices = async () => {\n    console.log(`Loading services for ${type}`);\n    setLoading(true);\n    setError(null);\n    try {\n      // Dynamically import the services JSON file for the assessment type\n      const servicesModule = await import(`../../assessments/${type}/services.json`);\n      console.log('Services loaded:', servicesModule.default);\n      setServices(servicesModule.default || []);\n\n      // Initialize selected services from previous selections if available\n      if (assessmentData.services && assessmentData.services.length > 0) {\n        const initialSelections = {};\n        assessmentData.services.forEach(serviceId => {\n          initialSelections[serviceId] = 1; // Set to 1 to indicate selected\n        });\n        setSelectedServices(initialSelections);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading services:', error);\n      setError(`Failed to load services. ${error.message}`);\n      setLoading(false);\n\n      // Retry loading a few times if it fails (could be a network issue)\n      if (loadingRetries < 3) {\n        setLoadingRetries(prev => prev + 1);\n        setTimeout(loadServices, 1000); // Retry after 1 second\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.screen,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logo,\n        children: [\"obsolete\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: 45,\n        label: \"Step 4 of 7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#aaa',\n        fontStyle: 'italic'\n      },\n      children: \"Loading services...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.servicesGrid,\n      children: services.map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.serviceItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.serviceRow,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.serviceIcon,\n            children: service.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.serviceContent,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.serviceName,\n              children: service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.serviceDescription,\n              children: service.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this), isAgency ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sliderContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: selectedServices[service.id] || 0,\n            onChange: e => handleSliderChange(service.id, e.target.value),\n            className: styles.rangeSlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.sliderValue,\n            children: [selectedServices[service.id] || 0, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.checkboxContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: service.id,\n            checked: !!selectedServices[service.id],\n            onChange: e => handleSliderChange(service.id, e.target.checked ? 1 : 0),\n            className: styles.checkbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: service.id,\n            className: styles.checkboxLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }, this)]\n      }, service.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coCreationHighlight,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Why we ask: Knowing your core \", isAgency ? 'services' : 'activities', \" helps us pinpoint where AI can have the biggest impact on your efficiency and \", isAgency ? 'client value' : 'results', \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.navButton,\n        onClick: () => window.location.reload(),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navigation,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.navButton,\n        onClick: () => navigate(`/assessment/${type}/qualify`, {\n          replace: true\n        }),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.navButton} ${styles.primary}`,\n        disabled: !hasSelections,\n        onClick: handleContinue,\n        children: !hasSelections ? 'Please select a service' : 'Continue'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(ServiceSelector, \"Pwlcb4mJA50w9p6nQEFj7BuHc8M=\", false, function () {\n  return [useParams, useNavigate, useAssessment];\n});\n_c = ServiceSelector;\nexport default ServiceSelector;\nvar _c;\n$RefreshReg$(_c, \"ServiceSelector\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","styles","useAssessment","jsxDEV","_jsxDEV","ServiceSelector","_s","type","navigate","assessmentData","updateAssessmentData","saveProgress","services","setServices","selectedServices","setSelectedServices","loading","setLoading","error","setError","loadingRetries","setLoadingRetries","savedDataString","localStorage","getItem","savedData","JSON","parse","console","log","qualifying","Object","keys","length","initialSelections","forEach","serviceId","checkQualifyingData","hasQualifyingData","replace","loadServices","servicesModule","default","message","prev","setTimeout","className","screen","children","header","logo","fileName","_jsxFileName","lineNumber","columnNumber","ProgressBar","progress","label","title","description","style","color","fontStyle","servicesGrid","map","service","serviceItem","serviceRow","serviceIcon","icon","serviceContent","serviceName","name","serviceDescription","isAgency","sliderContainer","min","max","value","id","onChange","e","handleSliderChange","target","rangeSlider","sliderValue","checkboxContainer","checked","checkbox","htmlFor","checkboxLabel","coCreationHighlight","errorContainer","navButton","onClick","window","location","reload","navigation","primary","disabled","hasSelections","handleContinue","_c","$RefreshReg$"],"sources":["/Users/jon/Documents/GitHub/assessor/src/core/components/ServiceSelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styles from './ServiceSelector.module.css';\nimport { useAssessment } from '../hooks/useAssessment';\n\nconst ServiceSelector = () => {\n  const { type } = useParams();\n  const navigate = useNavigate();\n  const { assessmentData, updateAssessmentData, saveProgress } = useAssessment(type);\n  \n  const [services, setServices] = useState([]);\n  const [selectedServices, setSelectedServices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [loadingRetries, setLoadingRetries] = useState(0);\n\n  // Initialize component from localStorage directly for reliability\n  useEffect(() => {\n    try {\n      // Always check localStorage directly first\n      const savedDataString = localStorage.getItem('assessmentData');\n      if (savedDataString) {\n        const savedData = JSON.parse(savedDataString);\n        console.log('DIRECT LOCALSTORAGE READ:', savedData);\n        \n        // If we have qualifying data in localStorage but not in assessmentData, it means \n        // the hook's state hasn't updated yet, so we'll manually update it\n        if (savedData.qualifying && Object.keys(savedData.qualifying).length > 0 && \n            (!assessmentData.qualifying || Object.keys(assessmentData.qualifying).length === 0)) {\n          console.log('Manually updating assessment data from localStorage');\n          updateAssessmentData(savedData);\n        }\n        \n        // Initialize selected services from saved data\n        if (savedData.services && savedData.services.length > 0) {\n          const initialSelections = {};\n          savedData.services.forEach(serviceId => {\n            initialSelections[serviceId] = 1; // Set to 1 to indicate selected\n          });\n          setSelectedServices(initialSelections);\n        }\n      }\n    } catch (error) {\n      console.error('Error reading from localStorage:', error);\n    }\n    \n    // Check if qualifying data exists in localStorage or assessmentData\n    checkQualifyingData();\n  }, []);\n\n  // Function to check if qualifying data exists and redirect if needed\n  const checkQualifyingData = () => {\n    console.log('Checking qualifying data, assessment type:', type);\n    console.log('Current assessment data:', assessmentData);\n    \n    let hasQualifyingData = false;\n    \n    // Check assessment data from hook\n    if (assessmentData?.qualifying && Object.keys(assessmentData.qualifying).length > 0) {\n      hasQualifyingData = true;\n    }\n    \n    // If not in hook state, check localStorage directly\n    if (!hasQualifyingData) {\n      try {\n        const savedDataString = localStorage.getItem('assessmentData');\n        if (savedDataString) {\n          const savedData = JSON.parse(savedDataString);\n          if (savedData.qualifying && Object.keys(savedData.qualifying).length > 0) {\n            console.log('Found qualifying data in localStorage');\n            hasQualifyingData = true;\n            // Update assessment data\n            updateAssessmentData(savedData);\n          }\n        }\n      } catch (error) {\n        console.error('Error checking localStorage for qualifying data:', error);\n      }\n    }\n    \n    // If still no qualifying data, redirect to qualifying questions\n    if (!hasQualifyingData) {\n      console.log('No qualifying data found, redirecting to qualifying questions');\n      navigate(`/assessment/${type}/qualifying`, { replace: true });\n      return false;\n    }\n    \n    // If we have qualifying data, load services\n    loadServices();\n    return true;\n  };\n\n  const loadServices = async () => {\n    console.log(`Loading services for ${type}`);\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Dynamically import the services JSON file for the assessment type\n      const servicesModule = await import(`../../assessments/${type}/services.json`);\n      console.log('Services loaded:', servicesModule.default);\n      setServices(servicesModule.default || []);\n      \n      // Initialize selected services from previous selections if available\n      if (assessmentData.services && assessmentData.services.length > 0) {\n        const initialSelections = {};\n        assessmentData.services.forEach(serviceId => {\n          initialSelections[serviceId] = 1; // Set to 1 to indicate selected\n        });\n        setSelectedServices(initialSelections);\n      }\n      \n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading services:', error);\n      setError(`Failed to load services. ${error.message}`);\n      setLoading(false);\n      \n      // Retry loading a few times if it fails (could be a network issue)\n      if (loadingRetries < 3) {\n        setLoadingRetries(prev => prev + 1);\n        setTimeout(loadServices, 1000); // Retry after 1 second\n      }\n    }\n  };\n\n    return (\n        <div className={styles.screen}>\n            <div className={styles.header}>\n                <div className={styles.logo}>obsolete<span>.</span></div>\n                <ProgressBar progress={45} label=\"Step 4 of 7\" />\n            </div>\n            \n            <h2>{title}</h2>\n            <p>{description}</p>\n            \n            {loading ? (\n                <p style={{ color: '#aaa', fontStyle: 'italic' }}>Loading services...</p>\n            ) : (\n                <div className={styles.servicesGrid}>\n                    {services.map((service) => (\n                        <div key={service.id} className={styles.serviceItem}>\n                            <div className={styles.serviceRow}>\n                                <div className={styles.serviceIcon}>{service.icon}</div>\n                                <div className={styles.serviceContent}>\n                                    <div className={styles.serviceName}>{service.name}</div>\n                                    <div className={styles.serviceDescription}>{service.description}</div>\n                                </div>\n                            </div>\n                            {isAgency ? (\n                                <div className={styles.sliderContainer}>\n                                    <input\n                                        type=\"range\"\n                                        min=\"0\"\n                                        max=\"100\"\n                                        value={selectedServices[service.id] || 0}\n                                        onChange={(e) => handleSliderChange(service.id, e.target.value)}\n                                        className={styles.rangeSlider}\n                                    />\n                                    <span className={styles.sliderValue}>\n                                        {selectedServices[service.id] || 0}%\n                                    </span>\n                                </div>\n                            ) : (\n                                <div className={styles.checkboxContainer}>\n                                    <input\n                                        type=\"checkbox\"\n                                        id={service.id}\n                                        checked={!!selectedServices[service.id]}\n                                        onChange={(e) => handleSliderChange(service.id, e.target.checked ? 1 : 0)}\n                                        className={styles.checkbox}\n                                    />\n                                    <label htmlFor={service.id} className={styles.checkboxLabel}></label>\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            )}\n            \n            <div className={styles.coCreationHighlight}>\n                <p>Why we ask: Knowing your core {isAgency ? 'services' : 'activities'} helps us pinpoint where AI can have the biggest impact on your efficiency and {isAgency ? 'client value' : 'results'}.</p>\n            </div>\n            \n            {error && (\n                <div className={styles.errorContainer}>\n                    <p>{error}</p>\n                    <button \n                        className={styles.navButton} \n                        onClick={() => window.location.reload()}\n                    >\n                        Try Again\n                    </button>\n                </div>\n            )}\n            \n            <div className={styles.navigation}>\n                <button className={styles.navButton} onClick={() => navigate(`/assessment/${type}/qualify`, { replace: true })}>← Back</button>\n                <button \n                    className={`${styles.navButton} ${styles.primary}`}\n                    disabled={!hasSelections}\n                    onClick={handleContinue}\n                >\n                    {!hasSelections ? 'Please select a service' : 'Continue'}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ServiceSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,MAAM,MAAM,8BAA8B;AACjD,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC5B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,cAAc;IAAEC,oBAAoB;IAAEC;EAAa,CAAC,GAAGT,aAAa,CAACK,IAAI,CAAC;EAElF,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;;EAEvD;EACAC,SAAS,CAAC,MAAM;IACd,IAAI;MACF;MACA,MAAMwB,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;MAC9D,IAAIF,eAAe,EAAE;QACnB,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;QAC7CM,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEJ,SAAS,CAAC;;QAEnD;QACA;QACA,IAAIA,SAAS,CAACK,UAAU,IAAIC,MAAM,CAACC,IAAI,CAACP,SAAS,CAACK,UAAU,CAAC,CAACG,MAAM,GAAG,CAAC,KACnE,CAACxB,cAAc,CAACqB,UAAU,IAAIC,MAAM,CAACC,IAAI,CAACvB,cAAc,CAACqB,UAAU,CAAC,CAACG,MAAM,KAAK,CAAC,CAAC,EAAE;UACvFL,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;UAClEnB,oBAAoB,CAACe,SAAS,CAAC;QACjC;;QAEA;QACA,IAAIA,SAAS,CAACb,QAAQ,IAAIa,SAAS,CAACb,QAAQ,CAACqB,MAAM,GAAG,CAAC,EAAE;UACvD,MAAMC,iBAAiB,GAAG,CAAC,CAAC;UAC5BT,SAAS,CAACb,QAAQ,CAACuB,OAAO,CAACC,SAAS,IAAI;YACtCF,iBAAiB,CAACE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;UACpC,CAAC,CAAC;UACFrB,mBAAmB,CAACmB,iBAAiB,CAAC;QACxC;MACF;IACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;;IAEA;IACAmB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,mBAAmB,GAAGA,CAAA,KAAM;IAChCT,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEtB,IAAI,CAAC;IAC/DqB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEpB,cAAc,CAAC;IAEvD,IAAI6B,iBAAiB,GAAG,KAAK;;IAE7B;IACA,IAAI7B,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAEqB,UAAU,IAAIC,MAAM,CAACC,IAAI,CAACvB,cAAc,CAACqB,UAAU,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;MACnFK,iBAAiB,GAAG,IAAI;IAC1B;;IAEA;IACA,IAAI,CAACA,iBAAiB,EAAE;MACtB,IAAI;QACF,MAAMhB,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;QAC9D,IAAIF,eAAe,EAAE;UACnB,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;UAC7C,IAAIG,SAAS,CAACK,UAAU,IAAIC,MAAM,CAACC,IAAI,CAACP,SAAS,CAACK,UAAU,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;YACxEL,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;YACpDS,iBAAiB,GAAG,IAAI;YACxB;YACA5B,oBAAoB,CAACe,SAAS,CAAC;UACjC;QACF;MACF,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdU,OAAO,CAACV,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MAC1E;IACF;;IAEA;IACA,IAAI,CAACoB,iBAAiB,EAAE;MACtBV,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;MAC5ErB,QAAQ,CAAC,eAAeD,IAAI,aAAa,EAAE;QAAEgC,OAAO,EAAE;MAAK,CAAC,CAAC;MAC7D,OAAO,KAAK;IACd;;IAEA;IACAC,YAAY,CAAC,CAAC;IACd,OAAO,IAAI;EACb,CAAC;EAED,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BZ,OAAO,CAACC,GAAG,CAAC,wBAAwBtB,IAAI,EAAE,CAAC;IAC3CU,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAMsB,cAAc,GAAG,MAAM,MAAM,CAAC,qBAAqBlC,IAAI,gBAAgB,CAAC;MAC9EqB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEY,cAAc,CAACC,OAAO,CAAC;MACvD7B,WAAW,CAAC4B,cAAc,CAACC,OAAO,IAAI,EAAE,CAAC;;MAEzC;MACA,IAAIjC,cAAc,CAACG,QAAQ,IAAIH,cAAc,CAACG,QAAQ,CAACqB,MAAM,GAAG,CAAC,EAAE;QACjE,MAAMC,iBAAiB,GAAG,CAAC,CAAC;QAC5BzB,cAAc,CAACG,QAAQ,CAACuB,OAAO,CAACC,SAAS,IAAI;UAC3CF,iBAAiB,CAACE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC;QACFrB,mBAAmB,CAACmB,iBAAiB,CAAC;MACxC;MAEAjB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAAC,4BAA4BD,KAAK,CAACyB,OAAO,EAAE,CAAC;MACrD1B,UAAU,CAAC,KAAK,CAAC;;MAEjB;MACA,IAAIG,cAAc,GAAG,CAAC,EAAE;QACtBC,iBAAiB,CAACuB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;QACnCC,UAAU,CAACL,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;MAClC;IACF;EACF,CAAC;EAEC,oBACIpC,OAAA;IAAK0C,SAAS,EAAE7C,MAAM,CAAC8C,MAAO;IAAAC,QAAA,gBAC1B5C,OAAA;MAAK0C,SAAS,EAAE7C,MAAM,CAACgD,MAAO;MAAAD,QAAA,gBAC1B5C,OAAA;QAAK0C,SAAS,EAAE7C,MAAM,CAACiD,IAAK;QAAAF,QAAA,GAAC,UAAQ,eAAA5C,OAAA;UAAA4C,QAAA,EAAM;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzDlD,OAAA,CAACmD,WAAW;QAACC,QAAQ,EAAE,EAAG;QAACC,KAAK,EAAC;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAENlD,OAAA;MAAA4C,QAAA,EAAKU;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBlD,OAAA;MAAA4C,QAAA,EAAIW;IAAW;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEnBtC,OAAO,gBACJZ,OAAA;MAAGwD,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAd,QAAA,EAAC;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzElD,OAAA;MAAK0C,SAAS,EAAE7C,MAAM,CAAC8D,YAAa;MAAAf,QAAA,EAC/BpC,QAAQ,CAACoD,GAAG,CAAEC,OAAO,iBAClB7D,OAAA;QAAsB0C,SAAS,EAAE7C,MAAM,CAACiE,WAAY;QAAAlB,QAAA,gBAChD5C,OAAA;UAAK0C,SAAS,EAAE7C,MAAM,CAACkE,UAAW;UAAAnB,QAAA,gBAC9B5C,OAAA;YAAK0C,SAAS,EAAE7C,MAAM,CAACmE,WAAY;YAAApB,QAAA,EAAEiB,OAAO,CAACI;UAAI;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxDlD,OAAA;YAAK0C,SAAS,EAAE7C,MAAM,CAACqE,cAAe;YAAAtB,QAAA,gBAClC5C,OAAA;cAAK0C,SAAS,EAAE7C,MAAM,CAACsE,WAAY;cAAAvB,QAAA,EAAEiB,OAAO,CAACO;YAAI;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxDlD,OAAA;cAAK0C,SAAS,EAAE7C,MAAM,CAACwE,kBAAmB;cAAAzB,QAAA,EAAEiB,OAAO,CAACN;YAAW;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACLoB,QAAQ,gBACLtE,OAAA;UAAK0C,SAAS,EAAE7C,MAAM,CAAC0E,eAAgB;UAAA3B,QAAA,gBACnC5C,OAAA;YACIG,IAAI,EAAC,OAAO;YACZqE,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,KAAK;YACTC,KAAK,EAAEhE,gBAAgB,CAACmD,OAAO,CAACc,EAAE,CAAC,IAAI,CAAE;YACzCC,QAAQ,EAAGC,CAAC,IAAKC,kBAAkB,CAACjB,OAAO,CAACc,EAAE,EAAEE,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;YAChEhC,SAAS,EAAE7C,MAAM,CAACmF;UAAY;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACFlD,OAAA;YAAM0C,SAAS,EAAE7C,MAAM,CAACoF,WAAY;YAAArC,QAAA,GAC/BlC,gBAAgB,CAACmD,OAAO,CAACc,EAAE,CAAC,IAAI,CAAC,EAAC,GACvC;UAAA;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAENlD,OAAA;UAAK0C,SAAS,EAAE7C,MAAM,CAACqF,iBAAkB;UAAAtC,QAAA,gBACrC5C,OAAA;YACIG,IAAI,EAAC,UAAU;YACfwE,EAAE,EAAEd,OAAO,CAACc,EAAG;YACfQ,OAAO,EAAE,CAAC,CAACzE,gBAAgB,CAACmD,OAAO,CAACc,EAAE,CAAE;YACxCC,QAAQ,EAAGC,CAAC,IAAKC,kBAAkB,CAACjB,OAAO,CAACc,EAAE,EAAEE,CAAC,CAACE,MAAM,CAACI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAE;YAC1EzC,SAAS,EAAE7C,MAAM,CAACuF;UAAS;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACFlD,OAAA;YAAOqF,OAAO,EAAExB,OAAO,CAACc,EAAG;YAACjC,SAAS,EAAE7C,MAAM,CAACyF;UAAc;YAAAvC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CACR;MAAA,GAjCKW,OAAO,CAACc,EAAE;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkCf,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAEDlD,OAAA;MAAK0C,SAAS,EAAE7C,MAAM,CAAC0F,mBAAoB;MAAA3C,QAAA,eACvC5C,OAAA;QAAA4C,QAAA,GAAG,gCAA8B,EAAC0B,QAAQ,GAAG,UAAU,GAAG,YAAY,EAAC,iFAA+E,EAACA,QAAQ,GAAG,cAAc,GAAG,SAAS,EAAC,GAAC;MAAA;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjM,CAAC,EAELpC,KAAK,iBACFd,OAAA;MAAK0C,SAAS,EAAE7C,MAAM,CAAC2F,cAAe;MAAA5C,QAAA,gBAClC5C,OAAA;QAAA4C,QAAA,EAAI9B;MAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdlD,OAAA;QACI0C,SAAS,EAAE7C,MAAM,CAAC4F,SAAU;QAC5BC,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;QAAAjD,QAAA,EAC3C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,eAEDlD,OAAA;MAAK0C,SAAS,EAAE7C,MAAM,CAACiG,UAAW;MAAAlD,QAAA,gBAC9B5C,OAAA;QAAQ0C,SAAS,EAAE7C,MAAM,CAAC4F,SAAU;QAACC,OAAO,EAAEA,CAAA,KAAMtF,QAAQ,CAAC,eAAeD,IAAI,UAAU,EAAE;UAAEgC,OAAO,EAAE;QAAK,CAAC,CAAE;QAAAS,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/HlD,OAAA;QACI0C,SAAS,EAAE,GAAG7C,MAAM,CAAC4F,SAAS,IAAI5F,MAAM,CAACkG,OAAO,EAAG;QACnDC,QAAQ,EAAE,CAACC,aAAc;QACzBP,OAAO,EAAEQ,cAAe;QAAAtD,QAAA,EAEvB,CAACqD,aAAa,GAAG,yBAAyB,GAAG;MAAU;QAAAlD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChD,EAAA,CA3MID,eAAe;EAAA,QACFL,SAAS,EACTD,WAAW,EACmCG,aAAa;AAAA;AAAAqG,EAAA,GAHxElG,eAAe;AA6MrB,eAAeA,eAAe;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}