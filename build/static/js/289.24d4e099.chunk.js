"use strict";(self.webpackChunkmulti_sector_assessment_platform=self.webpackChunkmulti_sector_assessment_platform||[]).push([[289],{289:(t,e,s)=>{s.d(e,{FlowController:()=>r});class r{constructor(t){this.config=t,this.stages=["sector","qualifying","services","questions","email","results"],this.currentStageIndex=0}start(){this.currentStageIndex=0}getCurrentStage(){return this.stages[this.currentStageIndex]}advance(){return this.shouldSkipStage()?(this.currentStageIndex++,this.advance()):(this.currentStageIndex<this.stages.length-1&&this.currentStageIndex++,this.getCurrentStage())}goBack(){return this.currentStageIndex>0&&(this.currentStageIndex--,this.shouldSkipStage())?this.goBack():this.getCurrentStage()}setStage(t){const e=this.stages.indexOf(t);-1!==e&&(this.currentStageIndex=e)}shouldSkipStage(){return!("sector"!==this.getCurrentStage()||!this.config.skipSector)}getRelevantQuestions(t){const e=t.getContext("selectedServices")||[],s=t.getContext("qualifying")||{};return(this.config.questions||[]).filter((t=>{if(t.services&&t.services.length>0){if(!t.services.some((t=>e.includes(t))))return!1}if(t.conditions){if(!Object.entries(t.conditions).every((t=>{let[e,r]=t;const n=s[e];return r.includes(n)})))return!1}return!0}))}getProgress(){const t=this.stages.length,e=this.currentStageIndex;return{current:e+1,total:t,percentage:Math.round(e/(t-1)*100),stageName:this.getCurrentStage()}}isComplete(){return this.currentStageIndex===this.stages.length-1}reset(){this.currentStageIndex=0}}}}]);
//# sourceMappingURL=289.24d4e099.chunk.js.map