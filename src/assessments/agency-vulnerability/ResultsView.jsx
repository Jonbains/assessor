import React from 'react';
import styles from '../../core/styles/components.module.css';

// Agency Vulnerability Assessment Results View
const AgencyResultsView = ({ results }) => {
  console.log('AgencyResultsView received results:', results);
  
  // Check if results is undefined or missing
  if (!results) {
    console.error('AgencyResultsView: results prop is undefined or null');
    return <div className="error-message">No results data available. Please try again.</div>;
  }
  
  // Log all the keys in the results object
  console.log('AgencyResultsView results keys:', Object.keys(results));
  
  const { executive, readiness, opportunities, roadmap, impact, nextSteps } = results;
  
  // Check if required properties exist
  console.log('Executive data:', executive);
  console.log('Readiness data:', readiness);
  console.log('Opportunities data:', opportunities);
  console.log('Roadmap data:', roadmap);
  console.log('Impact data:', impact);
  console.log('Next Steps data:', nextSteps);
  
  // Early validation to catch issues
  if (!executive || !readiness || !opportunities || !roadmap || !impact || !nextSteps) {
    console.error('AgencyResultsView: Missing required sections in results', {
      hasExecutive: !!executive,
      hasReadiness: !!readiness,
      hasOpportunities: !!opportunities,
      hasRoadmap: !!roadmap,
      hasImpact: !!impact,
      hasNextSteps: !!nextSteps
    });
    return (
      <div className="error-message">
        <h2>Incomplete Results Data</h2>
        <p>Some required sections of the report are missing. The following sections are available:</p>
        <ul>
          {executive && <li>Executive Summary</li>}
          {readiness && <li>Readiness Analysis</li>}
          {opportunities && <li>Opportunities</li>}
          {roadmap && <li>Roadmap</li>}
          {impact && <li>Impact Analysis</li>}
          {nextSteps && <li>Next Steps</li>}
        </ul>
      </div>
    );
  }
    
    return (
        <div className={styles.resultsContainer}>
            {/* Executive Summary */}
            <div className={styles.reportSection}>
                <h2>Executive Summary</h2>
                <div className={styles.resultsHeader}>
                    <div className={styles.scoreSection}>
                        <div className={styles.scoreCircle}>
                            <svg width="200" height="200">
                                <circle cx="100" cy="100" r="90" stroke="rgba(255,255,255,0.1)" strokeWidth="12" fill="none"/>
                                <circle cx="100" cy="100" r="90" stroke="#ffff66" strokeWidth="12" fill="none"
                                    strokeDasharray={`${executive.keyMetrics.readinessScore.value * 5.65} 565`}
                                    strokeLinecap="round"
                                />
                            </svg>
                            <div className={styles.scoreValue}>{executive.keyMetrics.readinessScore.value}</div>
                            <div className={styles.scoreLabel}>Readiness Score</div>
                        </div>
                    </div>
                    
                    <div className={styles.headlineSection}>
                        <h1>{executive.headline}</h1>
                        <p className={styles.subheadline}>{executive.subheadline}</p>
                        
                        <div className={styles.keyMetrics}>
                            {Object.entries(executive.keyMetrics).filter(([key]) => key !== 'readinessScore').map(([key, metric]) => (
                                <div key={key} className={styles.metricCard}>
                                    <div className={styles.metricValue}>{metric.value}</div>
                                    <div className={styles.metricLabel}>{metric.label}</div>
                                    <div className={styles.metricInterpretation}>{metric.interpretation}</div>
                                </div>
                            ))}
                        </div>
                        
                        <div className={styles.narrative}>
                            <p>{executive.narrative}</p>
                        </div>
                    </div>
                </div>
            </div>

            {/* Readiness Analysis */}
            <div className={styles.reportSection}>
                <h2>Readiness Analysis</h2>
                <div className={styles.dimensionsGrid}>
                    {readiness.dimensions.map((dimension, idx) => (
                        <div key={idx} className={styles.dimensionCard}>
                            <h3 className={styles.dimensionName}>{dimension.name}</h3>
                            <div className={styles.dimensionScore}>{dimension.score}%</div>
                            <p className={styles.dimensionDescription}>{dimension.description}</p>
                        </div>
                    ))}
                </div>
                
                <div className={styles.narrative}>
                    <h3>Overall Assessment</h3>
                    <p>{readiness.narrative || "Your agency's overall readiness indicates both challenges and opportunities for AI transformation. The scores above reflect your current positioning in key dimensions that determine success in an AI-driven market."}</p>
                </div>
                
                <div className={styles.serviceReadiness}>
                    <h3>Service Vulnerability Analysis</h3>
                    <p className={styles.sectionIntro}>Service lines are assessed based on their vulnerability to AI disruption and your current readiness to adapt.</p>
                    <div className={styles.serviceGrid}>
                        {readiness.serviceReadiness.map((service, idx) => (
                            <div key={idx} className={`${styles.serviceCard} ${service.score > 70 ? styles.highRisk : service.score > 40 ? styles.mediumRisk : styles.lowRisk}`}>
                                <div className={styles.serviceName}>{service.name}</div>
                                <div className={styles.serviceScore}>{service.score}%</div>
                                <div className={styles.serviceInterpretation}>{service.interpretation}</div>
                                {service.timeToDisruption && (
                                    <div className={styles.disruptionTime}>Time to disruption: {service.timeToDisruption}</div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
                
                <div className={styles.serviceTransformation}>
                    <h3>Service Transformation Paths</h3>
                    <div className={styles.transformationGrid}>
                        {readiness.serviceReadiness
                            .filter(service => service.score > 50) // Show transformation paths for vulnerable services
                            .map((service, idx) => {
                                const serviceKey = service.name.toLowerCase().replace(/\s+/g, '_');
                                const transformationPath = readiness.transformationPaths && readiness.transformationPaths[serviceKey];
                                
                                return transformationPath ? (
                                    <div key={idx} className={styles.transformationCard}>
                                        <h4 className={styles.serviceName}>{service.name}</h4>
                                        <p className={styles.transformationPath}>{transformationPath}</p>
                                    </div>
                                ) : null;
                            }).filter(Boolean)}
                    </div>
                </div>
            </div>

            {/* Transformation Opportunities */}
            <div className={styles.reportSection}>
                <h2>Transformation Opportunities</h2>
                
                {/* Immediate Opportunities */}
                <div className={styles.opportunitiesSection}>
                    <h3>{opportunities.immediate.title}</h3>
                    <p className={styles.opportunitiesSubtitle}>{opportunities.immediate.subtitle}</p>
                    
                    <div className={styles.recommendationsGrid}>
                        {opportunities.immediate.items.map((item, idx) => (
                            <div key={idx} className={styles.recommendationCard}>
                                <h4 className={styles.recommendationTitle}>{item.title}</h4>
                                <p className={styles.recommendationDescription}>{item.description}</p>
                                <div className={styles.recommendationDetails}>
                                    <span><strong>Effort:</strong> {item.effort}</span>
                                    <span><strong>Impact:</strong> {item.impact}</span>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
                
                {/* Service-Specific Opportunities */}
                <div className={styles.opportunitiesSection}>
                    <h3>Service-Specific Opportunities</h3>
                    <p className={styles.opportunitiesSubtitle}>Targeted actions for your most vulnerable service lines</p>
                    
                    <div className={styles.recommendationsGrid}>
                        {opportunities.serviceSpecific && opportunities.serviceSpecific.map((item, idx) => (
                            <div key={idx} className={styles.recommendationCard}>
                                <div className={styles.serviceTag}>{item.service}</div>
                                <h4 className={styles.recommendationTitle}>{item.title}</h4>
                                <p className={styles.recommendationDescription}>{item.description || item.action}</p>
                                <div className={styles.recommendationDetails}>
                                    {item.effort && <span><strong>Effort:</strong> {item.effort}</span>}
                                    {item.impact && <span><strong>Impact:</strong> {item.impact}</span>}
                                    {item.time && <span><strong>Time Saved:</strong> {item.time}</span>}
                                    {item.difficulty && <span><strong>Difficulty:</strong> {item.difficulty}</span>}
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
                
                {/* Strategic Opportunities */}
                <div className={styles.opportunitiesSection}>
                    <h3>Strategic Opportunities</h3>
                    <p className={styles.opportunitiesSubtitle}>Longer-term initiatives with transformative impact</p>
                    
                    <div className={styles.recommendationsGrid}>
                        {opportunities.strategic && opportunities.strategic.map((item, idx) => (
                            <div key={idx} className={styles.recommendationCard}>
                                <h4 className={styles.recommendationTitle}>{item.title}</h4>
                                <p className={styles.recommendationDescription}>{item.description}</p>
                                <div className={styles.recommendationDetails}>
                                    {item.timeline && <span><strong>Timeline:</strong> {item.timeline}</span>}
                                    {item.impact && <span><strong>Impact:</strong> {item.impact}</span>}
                                    {item.complexity && <span><strong>Complexity:</strong> {item.complexity}</span>}
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
                
                {/* Financial Impact Opportunities */}
                {opportunities.valuationImpact && (
                    <div className={styles.opportunitiesSection}>
                        <h3>Valuation-Enhancing Opportunities</h3>
                        <p className={styles.opportunitiesSubtitle}>Focused initiatives to increase your agency's value</p>
                        
                        <div className={styles.recommendationsGrid}>
                            {opportunities.valuationImpact.map((item, idx) => (
                                <div key={idx} className={styles.recommendationCard}>
                                    <h4 className={styles.recommendationTitle}>{item.action}</h4>
                                    <p className={styles.recommendationDescription}>{item.howTo}</p>
                                    <div className={styles.valuationImpact}>{item.impact}</div>
                                </div>
                            ))}
                        </div>
                    </div>
                )}
            </div>

            {/* Roadmap */}
            <div className={styles.reportSection}>
                <h2>Your Transformation Roadmap</h2>
                <div className={styles.roadmapOverview}>
                    <h3>{roadmap.overview.title}</h3>
                    <p>{roadmap.overview.approach}</p>
                </div>
                
                <div className={styles.roadmapPhases}>
                    {roadmap.phases.map((phase, idx) => (
                        <div key={idx} className={styles.roadmapPhase}>
                            <h4 className={styles.phaseTitle}>{phase.title}</h4>
                            <div className={styles.phaseDuration}>{phase.duration}</div>
                            <ul className={styles.phaseActions}>
                                {phase.actions.map((action, i) => (
                                    <li key={i}>{action}</li>
                                ))}
                            </ul>
                        </div>
                    ))}
                </div>
            </div>

            {/* Valuation Impact */}
            {impact && (
                <div className={styles.reportSection}>
                    <h2>{impact.title}</h2>
                    <p className={styles.impactSubtitle}>{impact.subtitle}</p>
                    
                    <div className={styles.valuationGrid}>
                        <div className={`${styles.valuationCard} ${styles.current}`}>
                            <div className={styles.valuationLabel}>Current Valuation</div>
                            <div className={styles.valuationValue}>{impact.current.multiple}</div>
                            <div className={styles.valuationCategory}>{impact.current.category}</div>
                        </div>
                        <div className={`${styles.valuationCard} ${styles.potential}`}>
                            <div className={styles.valuationLabel}>Potential Valuation</div>
                            <div className={styles.valuationValue}>{impact.potential.multiple}</div>
                            <div className={styles.valuationIncrease}>{impact.potential.increase}</div>
                            <div className={styles.valuationTimeframe}>Achievable in {impact.potential.achievableIn}</div>
                        </div>
                    </div>
                    
                    <div className={styles.valuationDrivers}>
                        <h3>Valuation Drivers</h3>
                        <div className={styles.driversGrid}>
                            {impact.drivers.map((driver, idx) => (
                                <div key={idx} className={styles.driverCard}>
                                    <h4 className={styles.driverTitle}>{driver.driver}</h4>
                                    <div className={styles.driverImpact}>
                                        <span>Current: <strong>{driver.currentImpact}</strong></span>
                                        <span>Potential: <strong>{driver.potentialImpact}</strong></span>
                                    </div>
                                    <div className={styles.driverAction}>{driver.action}</div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            )}

            {/* Next Steps */}
            <div className={styles.reportSection}>
                <h2>Your Next Steps</h2>
                
                <div className={styles.nextStepsOptions}>
                    {nextSteps.options.map((option, idx) => (
                        <div key={idx} className={styles.nextStepCard}>
                            <h3 className={styles.nextStepTitle}>{option.title}</h3>
                            <div className={styles.nextStepPrice}>{option.price}</div>
                            <p className={styles.nextStepDescription}>{option.description}</p>
                            <p className={styles.nextStepIdealFor}><strong>Ideal for:</strong> {option.idealFor}</p>
                            <button className={styles.primaryButton}>Select Option</button>
                        </div>
                    ))}
                </div>
                
                {nextSteps.testimonial && (
                    <div className={styles.testimonial}>
                        <p className={styles.testimonialQuote}>"{nextSteps.testimonial.quote}"</p>
                        <p className={styles.testimonialAuthor}>
                            — {nextSteps.testimonial.author}, {nextSteps.testimonial.role}
                        </p>
                    </div>
                )}
            </div>
        </div>
    );
};

export default AgencyResultsView;