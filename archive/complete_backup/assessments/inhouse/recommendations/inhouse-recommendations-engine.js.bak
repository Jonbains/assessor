/**
 * In-House Marketing Assessment - Recommendations Engine
 * 
 * Generates personalized recommendations based on assessment results.
 * Recommendations are organized by:
 * - Priority (high, medium, low)
 * - Dimension (people, process, strategy)
 * - Activity (specific marketing activities)
 */

export class InhouseRecommendationsEngine {
    constructor(config) {
        this.config = config;
        
        // Get recommendations configuration
        this.recommendationsConfig = config.recommendationsConfig || {};
        
        // Access the core recommendations from the config
        this.dimensionRecommendations = this.recommendationsConfig.coreRecommendations || {
            people_skills: {
                low: [
                    {
                        title: 'Establish AI Training Program',
                        description: 'Develop a structured training program to build essential AI skills across your marketing team.',
                        priority: 'high',
                        dimension: 'people_skills',
                        scoreThreshold: 40
                    },
                    {
                        title: 'Designate AI Champions',
                        description: 'Identify and empower internal champions to lead AI adoption and knowledge sharing.',
                        priority: 'high',
                        dimension: 'people_skills',
                        scoreThreshold: 40
                    }
                ],
                medium: [
                    {
                        title: 'Expand AI Tool Access',
                        description: 'Provide broader access to AI tools with appropriate guardrails and usage guidelines.',
                        priority: 'medium',
                        dimension: 'people_skills',
                        scoreThreshold: 60
                    },
                    {
                        title: 'Develop Prompt Engineering Skills',
                        description: 'Train team members on effective prompt engineering techniques to maximize results from generative AI tools.',
                        priority: 'medium',
                        dimension: 'people_skills',
                        scoreThreshold: 60
                    }
                ],
                high: [
                    {
                        title: 'AI Specialization Tracks',
                        description: 'Create specialized AI development tracks for team members to build deeper expertise in specific applications.',
                        priority: 'low',
                        dimension: 'people_skills',
                        scoreThreshold: 80
                    },
                    {
                        title: 'AI Skills Certification Program',
                        description: 'Implement an internal certification program to recognize and reward AI proficiency.',
                        priority: 'low',
                        dimension: 'people_skills',
                        scoreThreshold: 80
                    }
                ]
            },
            process_infrastructure: {
                low: [
                    {
                        title: 'Data Infrastructure Assessment',
                        description: 'Conduct a comprehensive audit of your marketing data infrastructure to identify gaps and opportunities for AI implementation.',
                        priority: 'high',
                        dimension: 'process_infrastructure',
                        scoreThreshold: 40
                    },
                    {
                        title: 'Implement Basic AI Workflow Tools',
                        description: 'Introduce foundational AI-powered tools to streamline repetitive marketing tasks.',
                        priority: 'high',
                        dimension: 'process_infrastructure',
                        scoreThreshold: 40
                    }
                ],
                medium: [
                    {
                        title: 'AI Integration Strategy',
                        description: 'Develop a comprehensive plan for integrating AI capabilities across your marketing technology stack.',
                        priority: 'medium',
                        dimension: 'process_infrastructure',
                        scoreThreshold: 60
                    },
                    {
                        title: 'Marketing Data Unification',
                        description: 'Consolidate marketing data sources to create a unified view for AI analysis and insights.',
                        priority: 'medium',
                        dimension: 'process_infrastructure',
                        scoreThreshold: 60
                    }
                ],
                high: [
                    {
                        title: 'Advanced Marketing Automation',
                        description: 'Implement sophisticated AI-driven marketing automation workflows across channels.',
                        priority: 'low',
                        dimension: 'process_infrastructure',
                        scoreThreshold: 80
                    },
                    {
                        title: 'Custom AI Model Development',
                        description: 'Explore opportunities for developing custom AI models tailored to your specific marketing needs.',
                        priority: 'low',
                        dimension: 'process_infrastructure',
                        scoreThreshold: 80
                    }
                ]
            },
            strategy_leadership: {
                low: [
                    {
                        title: 'AI Value Demonstration',
                        description: 'Create small pilot projects to demonstrate AI value to leadership and secure buy-in.',
                        priority: 'high',
                        dimension: 'strategy_leadership',
                        scoreThreshold: 40
                    },
                    {
                        title: 'Marketing AI Roadmap',
                        description: 'Develop a 12-month roadmap for progressive AI implementation in marketing.',
                        priority: 'high',
                        dimension: 'strategy_leadership',
                        scoreThreshold: 40
                    }
                ],
                medium: [
                    {
                        title: 'AI Budget Allocation',
                        description: 'Establish dedicated budget lines for AI tools, training, and resources.',
                        priority: 'medium',
                        dimension: 'strategy_leadership',
                        scoreThreshold: 60
                    },
                    {
                        title: 'AI Ethics Framework',
                        description: 'Develop guidelines for ethical AI use in marketing, including data privacy considerations.',
                        priority: 'medium',
                        dimension: 'strategy_leadership',
                        scoreThreshold: 60
                    }
                ],
                high: [
                    {
                        title: 'AI Innovation Program',
                        description: 'Launch an internal innovation program to explore cutting-edge AI applications in marketing.',
                        priority: 'low',
                        dimension: 'strategy_leadership',
                        scoreThreshold: 80
                    },
                    {
                        title: 'Strategic AI Partnerships',
                        description: 'Forge strategic partnerships with AI vendors and research institutions.',
                        priority: 'low',
                        dimension: 'strategy_leadership',
                        scoreThreshold: 80
                    }
                ]
            }
        };
        
        // Activity-specific recommendations
        this.activityRecommendations = {
            content_marketing: {
                low: [
                    {
                        title: 'Implement Basic AI Content Tools',
                        description: 'Start using entry-level AI writing assistants for content ideation and draft generation.',
                        priority: 'high',
                        activity: 'content_marketing',
                        scoreThreshold: 40
                    }
                ],
                medium: [
                    {
                        title: 'AI Content Workflow Integration',
                        description: 'Build comprehensive AI-powered content workflows from ideation to optimization.',
                        priority: 'medium',
                        activity: 'content_marketing',
                        scoreThreshold: 60
                    }
                ],
                high: [
                    {
                        title: 'Advanced Content Personalization',
                        description: 'Implement AI-driven dynamic content personalization at scale.',
                        priority: 'low',
                        activity: 'content_marketing',
                        scoreThreshold: 80
                    }
                ]
            },
            social_media: {
                low: [
                    {
                        title: 'AI Social Media Scheduling',
                        description: 'Implement AI tools for optimal post scheduling and basic content creation.',
                        priority: 'high',
                        activity: 'social_media',
                        scoreThreshold: 40
                    }
                ],
                medium: [
                    {
                        title: 'Social Sentiment Analysis',
                        description: 'Deploy AI-powered sentiment analysis to monitor brand perception.',
                        priority: 'medium',
                        activity: 'social_media',
                        scoreThreshold: 60
                    }
                ],
                high: [
                    {
                        title: 'Predictive Social Engagement',
                        description: 'Utilize AI to predict and optimize social content for maximum engagement.',
                        priority: 'low',
                        activity: 'social_media',
                        scoreThreshold: 80
                    }
                ]
            },
            // Additional activity recommendations would be defined here
        };
        
        // Industry-specific recommendations
        this.industryRecommendations = {
            b2b_saas: [
                {
                    title: 'Product-Led Growth AI',
                    description: 'Implement AI tools to optimize the product-led growth funnel and identify expansion opportunities.',
                    priority: 'high',
                    industry: 'b2b_saas',
                    scoreThreshold: 60
                },
                {
                    title: 'Customer Success AI Integration',
                    description: 'Deploy AI-powered customer health scoring to predict and prevent churn.',
                    priority: 'medium',
                    industry: 'b2b_saas',
                    scoreThreshold: 70
                }
            ],
            healthcare: [
                {
                    title: 'Compliance-First AI Implementation',
                    description: 'Develop AI governance frameworks that prioritize HIPAA compliance and patient data security.',
                    priority: 'high',
                    industry: 'healthcare',
                    scoreThreshold: 50
                },
                {
                    title: 'Patient Journey Optimization',
                    description: 'Use AI to map and enhance digital patient journeys while maintaining privacy standards.',
                    priority: 'medium',
                    industry: 'healthcare',
                    scoreThreshold: 70
                }
            ],
            // Additional industry recommendations would be defined here
        };
    }
    
    /**
    
    // Extract scores from results - handle both direct dimensions and nested scores structure
    const dimensionScores = {
        people_skills: results.people_skills || results.scores?.dimensions?.people_skills || 0,
        process_infrastructure: results.process_infrastructure || results.scores?.dimensions?.process_infrastructure || 0,
        strategy_leadership: results.strategy_leadership || results.scores?.dimensions?.strategy_leadership || 0
    };
     * @param {Object} dimensionScores - Scores for each dimension
     * @return {Array} - Recommendations for dimensions
     */
    generateDimensionRecommendations(dimensionScores) {
        const recommendations = [];
        
        // Process each dimension
        for (const [dimension, score] of Object.entries(dimensionScores)) {
            const dimensionRecs = this.dimensionRecommendations[dimension];
            if (!dimensionRecs) continue;
            
            // Determine which recommendation set to use based on score
            let recSet;
            if (score < 40) {
                recSet = dimensionRecs.low || [];
            } else if (score < 70) {
                recSet = dimensionRecs.medium || [];
            } else {
                recSet = dimensionRecs.high || [];
            }
            
            // Add recommendations if score is below threshold
            recSet.forEach(rec => {
                if (score <= rec.scoreThreshold) {
                    recommendations.push({
                        ...rec,
                        source: 'dimension',
                        sourceName: this.formatDimension(dimension)
                    });
                }
            });
        }
        
        return recommendations;
    }
    
    /**
     * Generate recommendations based on activity scores
     * @param {Object} activityScores - Scores for each activity
     * @return {Array} - Recommendations for activities
     */
    generateActivityRecommendations(activityScores) {
        const recommendations = [];
        
        // Process each activity
        for (const [activityId, data] of Object.entries(activityScores)) {
            const score = data.score;
            const activityRecs = this.activityRecommendations[activityId];
            if (!activityRecs) continue;
            
            // Determine which recommendation set to use based on score
            let recSet;
            if (score < 40) {
                recSet = activityRecs.low || [];
            } else if (score < 70) {
                recSet = activityRecs.medium || [];
            } else {
                recSet = activityRecs.high || [];
            }
            
            // Add recommendations if score is below threshold
            recSet.forEach(rec => {
                if (score <= rec.scoreThreshold) {
                    recommendations.push({
                        ...rec,
                        source: 'activity',
                        sourceName: this.getActivityName(activityId)
                    });
                }
            });
        }
        
        return recommendations;
    }
    
    /**
     * Generate industry-specific recommendations
     * @param {number} overallScore - Overall assessment score
     * @param {string} industry - Selected industry
     * @return {Array} - Industry-specific recommendations
     */
    generateIndustryRecommendations(overallScore, industry) {
        const recommendations = [];
        
        // Check if we have industry recommendations in the config
        if (this.recommendationsConfig.industryRecommendations && 
            this.recommendationsConfig.industryRecommendations[industry]) {
            
            // Get industry-specific recommendations from config
            const industryRecs = this.recommendationsConfig.industryRecommendations[industry];
            
            // Determine score category
            let scoreCategory;
            if (overallScore < 40) scoreCategory = 'lowScore';
            else if (overallScore < 70) scoreCategory = 'midScore';
            else scoreCategory = 'highScore';
            
            // Get recommendations for current score category
            const categoryRecs = industryRecs[scoreCategory] || {};
            
            // Add immediate recommendations
            if (categoryRecs.immediate) {
                categoryRecs.immediate.forEach(rec => {
                    recommendations.push({
                        ...rec,
                        source: 'industry',
                        sourceName: this.getIndustryName(industry)
                    });
                });
            }
            
            // Add short-term recommendations if low score
            if (scoreCategory === 'lowScore' && categoryRecs.shortTerm) {
                categoryRecs.shortTerm.forEach(rec => {
                    recommendations.push({
                        ...rec,
                        source: 'industry',
                        sourceName: this.getIndustryName(industry)
                    });
                });
            }
        } else {
            // Fallback to local industry recommendations
            const industryRecs = this.industryRecommendations[industry];
            if (!industryRecs) return recommendations;
            
            // Add recommendations if overall score is below threshold
            industryRecs.forEach(rec => {
                if (overallScore <= rec.scoreThreshold) {
                    recommendations.push({
                        ...rec,
                        source: 'industry',
                        sourceName: this.getIndustryName(industry)
                    });
                }
            });
        }
        
        return recommendations;
    }
    
    /**
     * Prioritize recommendations by importance
     * @param {Array} recommendations - All recommendations
     * @return {Array} - Prioritized recommendations
     */
    prioritizeRecommendations(recommendations) {
        // First sort by priority
        const priorityOrder = { high: 0, medium: 1, low: 2 };
        
        // Sort recommendations
        return [...recommendations].sort((a, b) => {
            // First by priority
            const priorityDiff = priorityOrder[a.priority] - priorityOrder[b.priority];
            if (priorityDiff !== 0) return priorityDiff;
            
            // Then by score threshold (higher threshold first)
            return b.scoreThreshold - a.scoreThreshold;
        });
    }
    
    /**
     * Format dimension name for display
     * @param {string} dimension - Dimension ID
     * @return {string} - Formatted dimension name
     */
    formatDimension(dimension) {
        // Convert snake_case to Title Case
        return dimension.split('_').map(word => 
            word.charAt(0).toUpperCase() + word.slice(1)
        ).join(' ');
    }
    
    /**
     * Get activity name from ID
     * @param {string} activityId - Activity ID
     * @return {string} - Activity name
     */
    getActivityName(activityId) {
        const nameMap = {
            content_marketing: 'Content Marketing',
            social_media: 'Social Media',
            seo_sem: 'SEO/SEM',
            email_marketing: 'Email Marketing',
            analytics_data: 'Analytics & Data',
            paid_advertising: 'Paid Advertising',
            creative_design: 'Creative & Design',
            marketing_automation: 'Marketing Automation',
            pr_communications: 'PR & Communications',
            events_webinars: 'Events & Webinars'
        };
        
        return nameMap[activityId] || activityId;
    }
    
    /**
     * Get industry name from ID
     * @param {string} industryId - Industry ID
     * @return {string} - Industry name
     */
    getIndustryName(industryId) {
        const nameMap = {
            b2b_saas: 'B2B SaaS',
            manufacturing: 'Manufacturing',
            healthcare: 'Healthcare',
            financial_services: 'Financial Services',
            ecommerce_retail: 'E-commerce/Retail'
        };
        
        return nameMap[industryId] || industryId;
    }
}

    /**
     * Determine implementation timeline based on priority and score
     * @param {string} priority - Recommendation priority
     * @param {number} overallScore - Overall assessment score
     * @return {string} - Implementation timeline
     */
    determineTimeline(priority, overallScore) {
        // Base timeline on priority
        if (priority === 'high') {
            return overallScore < 40 ? 'Immediate (0-30 days)' : 'Short-term (1-3 months)';
        } else if (priority === 'medium') {
            return overallScore < 60 ? 'Short-term (1-3 months)' : 'Medium-term (3-6 months)';
        } else {
            return overallScore < 70 ? 'Medium-term (3-6 months)' : 'Long-term (6-12 months)';
        }
    }
    
    /**
     * Estimate ROI based on recommendation and company profile
     * @param {Object} recommendation - Recommendation object
     * @param {string} industry - Industry ID
     * @param {string} companySize - Company size category
     * @return {string} - Estimated ROI
     */
    estimateROI(recommendation, industry, companySize) {
        // Base ROI ranges by priority
        const baseROI = {
            high: '20-30%',
            medium: '15-25%',
            low: '10-15%'
        };
        
        // Adjust based on industry
        const industryMultipliers = {
            b2b_saas: 1.2,
            ecommerce_retail: 1.3,
            financial_services: 1.1,
            healthcare: 0.9,
            manufacturing: 0.8
        };
        
        // Adjust based on company size
        const sizeMultipliers = {
            enterprise: 0.8,  // More complexity, harder to achieve high ROI
            mid_market: 1.0,  // Baseline
            small_business: 1.2  // More agility, easier to achieve high ROI
        };
        
        // Get multipliers
        const industryMultiplier = industryMultipliers[industry] || 1.0;
        const sizeMultiplier = sizeMultipliers[companySize] || 1.0;
        
        // If recommendation has specific ROI, use that
        if (recommendation.roi) {
            return recommendation.roi;
        }
        
        // Otherwise calculate based on priority and adjustments
        const range = baseROI[recommendation.priority] || baseROI.medium;
        
        // Simple output with general range
        return range;
    }
    
    /**
     * Determine implementation complexity
     * @param {Object} recommendation - Recommendation object
     * @param {number} overallScore - Overall assessment score
     * @return {string} - Complexity level
     */
    determineComplexity(recommendation, overallScore) {
        // Base complexity on priority and source
        if (recommendation.source === 'activity') {
            return 'Medium';
        } else if (recommendation.priority === 'high') {
            return overallScore < 50 ? 'Low' : 'Medium';
        } else if (recommendation.priority === 'medium') {
            return 'Medium';
        } else {
            return overallScore < 70 ? 'Medium' : 'High';
        }
    }
    
    /**
     * Calculate relevance score for recommendation
     * @param {Object} recommendation - Recommendation object
     * @param {number} overallScore - Overall assessment score
     * @param {Object} dimensionScores - Dimension scores
     * @return {number} - Relevance score (0-100)
     */
    calculateRelevanceScore(recommendation, overallScore, dimensionScores) {
        // Base score on priority
        let score = {
            high: 80,
            medium: 60,
            low: 40
        }[recommendation.priority] || 50;
        
        // Adjust based on dimension score if applicable
        if (recommendation.dimension && dimensionScores[recommendation.dimension]) {
            const dimensionScore = dimensionScores[recommendation.dimension];
            
            // More relevant if dimension score is low
            if (dimensionScore < 40) score += 15;
            else if (dimensionScore < 60) score += 10;
            else if (dimensionScore < 80) score += 5;
            else score -= 10; // Less relevant if dimension score is already high
        }
        
        // Cap at 100
        return Math.min(100, Math.max(0, score));
    }

export default InhouseRecommendationsEngine;
